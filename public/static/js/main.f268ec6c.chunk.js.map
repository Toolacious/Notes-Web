{"version":3,"sources":["icons/icon.jpg","graphql/login.js","accessToken.js","routes/auth.js","icons/login.jpg","components/SignIn.js","graphql/mutations.js","icons/signup.jpg","components/SignUp.js","routes/authRoute.js","routes/protectRoute.js","components/Page_1_0/MenuItem.js","graphql/logout.js","graphql/deleteUser.js","graphql/upload.js","context/avatarContext.js","components/Page_1_0/UploadDialog.js","components/Page_1_0/deleteUserDialog.js","components/Page_1_0/AccountDialog.js","context/filetree.js","components/Page_1_0/NewDialog.js","icons/avatar.jpg","icons/title.jpg","components/Page_1_0/Header.js","components/Page_1_0/SaveDialog.js","components/Page_1_0/Markdown.js","graphql/updateNote.js","context/mainContext.js","components/Page_1_0/Main.js","graphql/notes.js","graphql/getAvatar.js","graphql/noti.js","components/Page_1_0/SearchBox.js","components/Page_1_0/RenameDialog.js","components/Page_1_0/DeleteDialog.js","components/Page_1_0/TreeMenuItem.js","components/Page_1_0/FolderTree.js","components/Page_1_0/LeftDrawer.js","components/Page_1_0/RightDrawer.js","graphql/addTag.js","graphql/delTag.js","components/Page_1_0/TagBar.js","graphql/createNote.js","graphql/deleteNote.js","components/Page_1_0/FileActions.js","routes/loading.js","components/Page_1_0/Page_1_0.js","routes/Routes.js","App.js","reportWebVitals.js","index.js"],"names":["LOGIN_Mutation","gql","accessToken","setAccessToken","s","getAccessToken","initialState","user","decodedToken","jwtDecode","AuthContext","createContext","login","userData","logout","authReducer","state","action","type","payload","AuthProvider","props","useReducer","dispatch","Provider","value","Copyright","Typography","variant","color","align","to","Date","getFullYear","useStyles","makeStyles","theme","root","height","image","backgroundImage","loginImg","backgroundRepeat","backgroundColor","palette","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","secondary","main","form","width","marginTop","submit","SignIn","context","useContext","classes","useMutation","loading","error","useState","loginErr","setloginErr","history","useHistory","validationSchema","Yup","email","required","password","min","formik","useFormik","initialValues","onSubmit","values","a","variables","response","data","push","console","log","message","slice","Grid","container","component","className","CssBaseline","item","xs","sm","md","Paper","elevation","square","Avatar","src","LockOutlinedIcon","handleSubmit","noValidate","TextField","fullWidth","id","label","name","autoComplete","autoFocus","onChange","handleChange","touched","Boolean","errors","helperText","Button","disabled","isSubmitting","Box","mt","CREATE_USER_MUTATION","padding","borderRadius","space","SignUp","fname","max","lname","confirmPassword","oneOf","addUser","regiErr","setRegiErr","style","Container","maxWidth","justify","AuthRoute","Component","rest","render","ProtectRoute","menubarButton","fontSize","paddingTop","paddingBottom","paddingLeft","paddingRight","flexShrink","textTransform","menuItem","disabledMenuItem","cursor","SimpleMenu","menu","sections","React","anchorEl","setAnchorEl","aria-controls","aria-haspopup","onClick","event","currentTarget","onKeyDown","e","key","preventDefault","Menu","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","keepMounted","open","onClose","map","section","MenuItem","clsx","document","getElementById","func","LOGOUT_Mutation","DELUSER_Mutation","UPLOAD_Mutation","AvatarContext","String","setAvatar","canvas","crop","upload","url","toDataURL","picture","dialogButtonWrapper","flexGrow","dialogButton","textAlign","dialog","input","UploadDialog","userId","upImg","setUpImg","imgRef","useRef","previewCanvasRef","aspect","setCrop","completedCrop","setCompletedCrop","onLoad","useCallback","img","current","useEffect","scaleX","naturalWidth","scaleY","naturalHeight","ctx","getContext","pixelRatio","window","devicePixelRatio","setTransform","imageSmoothingQuality","drawImage","x","y","Dialog","aria-labelledby","DialogTitle","onImageLoaded","c","onComplete","circularCrop","maxHeight","overflow","ref","Math","round","DialogActions","accept","target","files","length","reader","FileReader","addEventListener","result","readAsDataURL","htmlFor","generateDownload","DeleteUserDialog","delFunc","closeFunc","headerAvatar","marginLeft","marginRight","headerAvatarWrapper","justifyContent","avatarWrapper","marginBottom","deleteButton","SimpleDialog","onOpen","selectedValue","avatar_src","alt","AccountDialog","setOpen","delOpen","setDelOpen","uploadOpen","setUploadOpen","setSelectedValue","delUser","handleClickOpen","handleClose","filecontext","usernotes","openFiles","currentOpenFile","setcurrentOpenFile","setuserNotes","setopenFiles","actions","RenameDialog","title","setTitle","valid","setValid","helper","setHelper","handleCreate","findIndex","notes","new","DialogContent","handleTitle","val","headerWrapper","flexWrap","borderBottom","divider","zIndex","drawer","icon","mainWrapper","titlebar","border","titleImg","objectFit","menubar","minHeight","overflowX","Header","openNewDialog","setOpenNewDialog","file_menu","saveButton","click","Fragment","Toolbar","IconButton","SaveDialog","updFunc","Markdown","escapeHtml","plugins","gfm","singleTilde","RemarkMathPlugin","renderers","code","language","vscDarkPlus","children","math","inlineMath","_mapProps","UPDNOTE_Mutation","mainContext","mode","setMode","searchStr","setSearchStr","guide","pageBar","listStyle","overflowY","chip","borderRight","chipRoot","transform","hover","chipText","textOverflow","chipFocus","markdown","mainWindowWrapper","position","mainWindow","viewWindow","modeButtonWrapper","top","right","nopad","inputStyle","resize","outline","outputStyle","Main","updNote","useTheme","pageNum","setPageNum","pages","setPages","openDialog","setOpenDialog","dialogFunctions","setDialogFunctions","fileID","node","addPage","Object","assign","unsaved","find","chipToDelete","includes","updPages","filter","index","handleDelete","indexOf","save","close","handleMode","updMode","currentPageIndex","tags","regex","str","links","g","exec","lastIndex","forEach","match","groupIndex","newPages","Chip","size","disableRipple","getElementsByClassName","focus","onDelete","Divider","orientation","handleContentData","NOTES_QUERY","AVATAR_QUERY","GUIDE_QUERY","borderColor","text","primary","linksIOTitle","SearchBox","tagItem","setTagItem","titleItem","setTitleItem","mdItem","setMdItem","openTitle","setOpenTitle","openMd","setOpenMd","alltags","ele","titlefiles","mdfiles","placeholder","List","disablePadding","obj","ListItem","button","ListItemText","handleRename","rename","DeleteDialog","delete","labelIcon","labelText","fontWeight","whiteSpace","TreeMenu","openRenameDialog","setOpenRenameDialog","openDeleteDialog","setOpenDeleteDialog","handleClick","onContextMenu","colorWhite1","FolderTree","renderTree","TreeItem","nodeId","Array","isArray","child","TreeView","defaultCollapseIcon","defaultExpanded","defaultExpandIcon","sidebarWrapper","rootShift","transition","transitions","create","easing","easeOut","duration","enteringScreen","drawerPaperWrapper","drawerPaper","bottom","PersistentDrawerLeft","graphMode","setGraph","aria-label","Drawer","anchor","docked","borderLeft","drawerButton","PersistentDrawerRight","r_open","setr_open","r_mode","setr_Mode","inlinks","setInLink","outlinks","setOutLink","openIn","setOpenIn","openOut","setOpenOut","inLinks","outLinks","tmp","keys","entries","setTag","setShowingItem","handleLink","tag","ADDTAG_Mutation","DELTAG_Mutation","alert","TagBar","anchorEle","setAnchorEle","setTimeout","undefined","addtag","deltag","chipData","setChipData","chips","newnotes","splice","newTag","body","Popover","Alert","severity","ADDNOTE_Mutation","DELNOTE_Mutation","actionReducer","updOpenFiles","updCurrentOpenFile","updData","idx","Example","mainGrid","pageContainer","Page_1_0","useQuery","ava_loading","ava_error","ava_data","userAvatar","guide_loading","guide_error","guide_data","setGuide","newNote","delNote","setUserNotes","createNote","newNotes","FileActions","disableGutters","flex","minWidth","Routes","exact","path","App","setLoading","fetch","method","credentials","then","res","json","decode","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","httpLink","createUploadLink","uri","requestLink","ApolloLink","operation","forward","Observable","observer","handle","Promise","resolve","setContext","headers","authorization","subscribe","next","bind","complete","catch","unsubscribe","RefreshLink","TokenRefreshLink","accessTokenField","isTokenValidOrUndefined","token","exp","now","fetchAccessToken","handleFetch","handleError","err","warn","errorLink","onError","graphQLErrors","networkError","errorMessage","client","ApolloClient","link","from","cache","InMemoryCache","restore","wrappedApp","ReactDOM"],"mappings":"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","file":"static/js/main.f268ec6c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon.e44a45f6.jpg\";","import { gql } from \"apollo-boost\";\r\n\r\nexport const LOGIN_Mutation = gql`\r\n    mutation login($email: String!, $password: String!) {\r\n        login(data: { email: $email, password: $password }) {\r\n            userId\r\n            name\r\n            email\r\n            accessToken\r\n        }\r\n    }\r\n`;\r\n","let accessToken = \"\";\r\n\r\nexport const setAccessToken = (s) => {\r\n    accessToken = s;\r\n};\r\n\r\nexport const getAccessToken = () => {\r\n    return accessToken;\r\n};\r\n","import React, { useReducer, createContext } from \"react\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport { getAccessToken } from \"../accessToken\";\r\n\r\nconst initialState = {\r\n    user: null,\r\n};\r\n\r\nif (getAccessToken()) {\r\n    const decodedToken = jwtDecode(getAccessToken());\r\n    initialState.user = decodedToken;\r\n}\r\n\r\nconst AuthContext = createContext({\r\n    user: null,\r\n    login: (userData) => {},\r\n    logout: () => {},\r\n});\r\n\r\nfunction authReducer(state, action) {\r\n    switch (action.type) {\r\n        case \"LOGIN\":\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n            };\r\n        case \"LOGOUT\":\r\n            return {\r\n                ...state,\r\n                user: null,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction AuthProvider(props) {\r\n    const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n    function login(userData) {\r\n        //localStorage.setItem(\"jwtToken\", userData.token);\r\n        dispatch({\r\n            type: \"LOGIN\",\r\n            payload: userData,\r\n        });\r\n    }\r\n\r\n    function logout() {\r\n        //localStorage.removeItem(\"jwtToken\");\r\n        dispatch({ type: \"LOGOUT\" });\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{ user: state.user, login, logout }}\r\n            {...props}\r\n        />\r\n    );\r\n}\r\n\r\nexport { AuthContext, AuthProvider };\r\n","export default __webpack_public_path__ + \"static/media/login.71966ff7.jpg\";","import React, { useState, useContext } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n//import Link from \"@material-ui/core/Link\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"../icons/icon.jpg\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { LOGIN_Mutation } from \"../graphql/login\";\r\nimport { AuthContext } from \"../routes/auth\";\r\nimport { setAccessToken } from \"../accessToken\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport loginImg from \"../icons/login.jpg\";\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {\"Copyright © \"}\r\n            <Link color=\"inherit\" to=\"https://material-ui.com/\">\r\n                Abyss Notes\r\n            </Link>{\" \"}\r\n            {new Date().getFullYear()}\r\n            {\".\"}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: \"100vh\",\r\n    },\r\n    image: {\r\n        backgroundImage: `url(${loginImg})`,\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundColor:\r\n            theme.palette.type === \"light\"\r\n                ? theme.palette.grey[50]\r\n                : theme.palette.grey[900],\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"center\",\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function SignIn() {\r\n    const context = useContext(AuthContext);\r\n    const classes = useStyles();\r\n    const [login, { loading, error }] = useMutation(LOGIN_Mutation);\r\n    const [loginErr, setloginErr] = useState(\"\");\r\n    const history = useHistory();\r\n    const validationSchema = Yup.object({\r\n        email: Yup.string(\"Enter your email\")\r\n            .email(\"Enter a valid email\")\r\n            .required(\"Email is required\"),\r\n        password: Yup.string(\"\")\r\n            .min(6, \"Password must contain at least 6 characters\")\r\n            .required(\"Enter your password\"),\r\n    });\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: \"\",\r\n            password: \"\",\r\n        },\r\n        validationSchema,\r\n        onSubmit: async (values) => {\r\n            try {\r\n                const { email, password } = values;\r\n                const response = await login({\r\n                    variables: {\r\n                        email,\r\n                        password,\r\n                    },\r\n                });\r\n                if (response && response.data) {\r\n                    setAccessToken(response.data.login.accessToken);\r\n                }\r\n                context.login(response.data.login);\r\n                history.push(\"/dashboard\");\r\n            } catch (err) {\r\n                console.log(err.message);\r\n                setloginErr(err.message.slice(15));\r\n            }\r\n        },\r\n    });\r\n\r\n    return (\r\n        <Grid container component=\"main\" className={classes.root}>\r\n            <CssBaseline />\r\n            <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n            <Grid\r\n                item\r\n                xs={12}\r\n                sm={8}\r\n                md={5}\r\n                component={Paper}\r\n                elevation={6}\r\n                square\r\n            >\r\n                <div className={classes.paper}>\r\n                    <Avatar\r\n                        className={classes.avatar}\r\n                        src={LockOutlinedIcon}\r\n                    ></Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Sign in\r\n                    </Typography>\r\n                    <form\r\n                        className={classes.form}\r\n                        onSubmit={formik.handleSubmit}\r\n                        noValidate\r\n                    >\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label=\"Email Address\"\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"\r\n                            autoFocus\r\n                            value={formik.values.email}\r\n                            onChange={formik.handleChange}\r\n                            error={\r\n                                (formik.touched.email &&\r\n                                    Boolean(formik.errors.email)) ||\r\n                                loginErr[0] === \"E\" ||\r\n                                loginErr[1] === \"e\"\r\n                            }\r\n                            helperText={\r\n                                (formik.touched.email && formik.errors.email) ||\r\n                                (loginErr[0] === \"E\" || loginErr[1] === \"e\"\r\n                                    ? loginErr\r\n                                    : null)\r\n                            }\r\n                        />\r\n\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                            onChange={formik.handleChange}\r\n                            error={\r\n                                (formik.touched.password &&\r\n                                    Boolean(formik.errors.password)) ||\r\n                                loginErr[0] === \"P\"\r\n                            }\r\n                            helperText={\r\n                                (formik.touched.password &&\r\n                                    formik.errors.password) ||\r\n                                (loginErr[0] === \"P\" ? loginErr : null)\r\n                            }\r\n                        />\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                            disabled={formik.isSubmitting}\r\n                        >\r\n                            Sign In\r\n                        </Button>\r\n                        <Grid container>\r\n                            <Grid item xs>\r\n                                <Link to=\"/signup\" variant=\"body2\">\r\n                                    {\"Don't have an account? Sign Up\"}\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Box mt={5}>\r\n                            <Copyright />\r\n                        </Box>\r\n                    </form>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n","import { gql } from \"apollo-boost\";\r\n\r\nexport const CREATE_USER_MUTATION = gql`\r\n    mutation createUser(\r\n        $fname: String!\r\n        $lname: String!\r\n        $name: String!\r\n        $email: String!\r\n        $password: String!\r\n    ) {\r\n        createUser(\r\n            data: {\r\n                fname: $fname\r\n                lname: $lname\r\n                name: $name\r\n                email: $email\r\n                password: $password\r\n            }\r\n        ) {\r\n            id\r\n            name\r\n            password\r\n        }\r\n    }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/signup.e3594763.jpg\";","import React, { useContext, useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n//import Link from \"@material-ui/core/Link\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"../icons/icon.jpg\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { CREATE_USER_MUTATION } from \"../graphql/mutations\";\r\nimport { LOGIN_Mutation } from \"../graphql/login\";\r\nimport { setAccessToken } from \"../accessToken\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport loginImg from \"../icons/signup.jpg\";\r\nimport { AuthContext } from \"../routes/auth\";\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {\"Copyright © \"}\r\n            <Link color=\"inherit\" to=\"https://material-ui.com/\">\r\n                Abyss Notes\r\n            </Link>{\" \"}\r\n            {new Date().getFullYear()}\r\n            {\".\"}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        backgroundColor: \"white\",\r\n        padding: theme.spacing(2),\r\n        borderRadius: \"20px\",\r\n    },\r\n    image: {\r\n        backgroundImage: `url(${loginImg})`,\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundColor:\r\n            theme.palette.type === \"light\"\r\n                ? theme.palette.grey[50]\r\n                : theme.palette.grey[900],\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"center\",\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    space: {\r\n        height: theme.spacing(8),\r\n    },\r\n}));\r\n\r\nexport default function SignUp() {\r\n    const context = useContext(AuthContext);\r\n\r\n    const validationSchema = Yup.object({\r\n        fname: Yup.string(\"Enter your first name\")\r\n            .min(2, \"Fist name should be of minimum 2 characters length\")\r\n            .max(50)\r\n            .required(\"First name is required\"),\r\n        lname: Yup.string(\"Enter your last name\")\r\n            .min(2, \"Fist name should be of minimum 2 characters length\")\r\n            .required(\"Last name is required\"),\r\n        name: Yup.string(\"Enter a name\")\r\n            .min(6, \"Username should be of minimum 6 characters length\")\r\n            .required(\"Name is required\"),\r\n        email: Yup.string(\"Enter your email\")\r\n            .email(\"Enter a valid email\")\r\n            .required(\"Email is required\"),\r\n        password: Yup.string(\"\")\r\n            .min(6, \"Password must contain at least 6 characters\")\r\n            .required(\"Enter your password\"),\r\n        confirmPassword: Yup.string(\"Enter your password\")\r\n            .required(\"Confirm your password\")\r\n            .oneOf([Yup.ref(\"password\")], \"Password does not match\"),\r\n    });\r\n\r\n    const history = useHistory();\r\n    const [addUser] = useMutation(CREATE_USER_MUTATION);\r\n    const [regiErr, setRegiErr] = useState(\"\");\r\n    const [login, { loading }] = useMutation(LOGIN_Mutation);\r\n    const classes = useStyles();\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            fname: \"\",\r\n            lname: \"\",\r\n            name: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            confirmPassword: \"\",\r\n        },\r\n        validationSchema,\r\n        onSubmit: async (values) => {\r\n            //alert(JSON.stringify(values, null, 2));\r\n            try {\r\n                const { fname, lname, name, email, password } = values;\r\n                await addUser({\r\n                    variables: {\r\n                        fname,\r\n                        lname,\r\n                        name,\r\n                        email,\r\n                        password,\r\n                    },\r\n                });\r\n                const response = await login({\r\n                    variables: {\r\n                        email,\r\n                        password,\r\n                    },\r\n                });\r\n                if (response && response.data) {\r\n                    setAccessToken(response.data.login.accessToken);\r\n                }\r\n                context.login(response.data.login);\r\n                history.push(\"/dashboard\");\r\n            } catch (err) {\r\n                console.log(err.message);\r\n                setRegiErr(err.message.slice(15));\r\n            }\r\n        },\r\n    });\r\n\r\n    return (\r\n        <div\r\n            style={{ width: \"100vw\", height: \"100vh\" }}\r\n            className={classes.image}\r\n        >\r\n            <Container\r\n                component=\"main\"\r\n                maxWidth=\"xs\"\r\n                style={{ height: \"100%\" }}\r\n            >\r\n                <CssBaseline />\r\n                <div className={classes.space}></div>\r\n                <div className={classes.paper}>\r\n                    <Avatar\r\n                        className={classes.avatar}\r\n                        src={LockOutlinedIcon}\r\n                    ></Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Sign up\r\n                    </Typography>\r\n                    <form\r\n                        className={classes.form}\r\n                        onSubmit={formik.handleSubmit}\r\n                        noValidate\r\n                    >\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    autoComplete=\"fname\"\r\n                                    name=\"fname\"\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"fname\"\r\n                                    label=\"First name\"\r\n                                    autoFocus\r\n                                    value={formik.values.fname}\r\n                                    onChange={formik.handleChange}\r\n                                    error={\r\n                                        formik.touched.fname &&\r\n                                        Boolean(formik.errors.fname)\r\n                                    }\r\n                                    helperText={\r\n                                        formik.touched.fname &&\r\n                                        formik.errors.fname\r\n                                    }\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"lname\"\r\n                                    label=\"Last name\"\r\n                                    name=\"lname\"\r\n                                    autoComplete=\"lname\"\r\n                                    value={formik.values.lname}\r\n                                    onChange={formik.handleChange}\r\n                                    error={\r\n                                        formik.touched.lname &&\r\n                                        Boolean(formik.errors.lname)\r\n                                    }\r\n                                    helperText={\r\n                                        formik.touched.lname &&\r\n                                        formik.errors.lname\r\n                                    }\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    autoComplete=\"username\"\r\n                                    name=\"name\"\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"name\"\r\n                                    label=\"Username\"\r\n                                    autoFocus\r\n                                    value={formik.values.name}\r\n                                    onChange={formik.handleChange}\r\n                                    error={\r\n                                        formik.touched.name &&\r\n                                        Boolean(formik.errors.name)\r\n                                    }\r\n                                    helperText={\r\n                                        formik.touched.name &&\r\n                                        formik.errors.name\r\n                                    }\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"email\"\r\n                                    label=\"Email Address\"\r\n                                    name=\"email\"\r\n                                    autoComplete=\"email\"\r\n                                    value={formik.values.email}\r\n                                    onChange={formik.handleChange}\r\n                                    error={\r\n                                        (formik.touched.email &&\r\n                                            Boolean(formik.errors.email)) ||\r\n                                        regiErr !== \"\"\r\n                                    }\r\n                                    helperText={\r\n                                        (formik.touched.email &&\r\n                                            formik.errors.email) ||\r\n                                        regiErr\r\n                                    }\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    name=\"password\"\r\n                                    label=\"Password\"\r\n                                    type=\"password\"\r\n                                    id=\"password\"\r\n                                    autoComplete=\"current-password\"\r\n                                    onChange={formik.handleChange}\r\n                                    error={\r\n                                        formik.touched.password &&\r\n                                        Boolean(formik.errors.password)\r\n                                    }\r\n                                    helperText={\r\n                                        formik.touched.password &&\r\n                                        formik.errors.password\r\n                                    }\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    name=\"confirmPassword\"\r\n                                    label=\"Confirm Password\"\r\n                                    type=\"password\"\r\n                                    id=\"confirmPassword\"\r\n                                    autoComplete=\"current-password\"\r\n                                    onChange={formik.handleChange}\r\n                                    error={\r\n                                        formik.touched.confirmPassword &&\r\n                                        Boolean(formik.errors.confirmPassword)\r\n                                    }\r\n                                    helperText={\r\n                                        formik.touched.confirmPassword &&\r\n                                        formik.errors.confirmPassword\r\n                                    }\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                            disabled={formik.isSubmitting}\r\n                        >\r\n                            Sign Up\r\n                        </Button>\r\n                        <Grid container justify=\"flex-end\">\r\n                            <Grid item xs>\r\n                                <Link to=\"/login\" variant=\"body2\">\r\n                                    Already have an account? Sign in\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </div>\r\n                <Box mt={5}>\r\n                    <Copyright />\r\n                </Box>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nimport { AuthContext } from \"./auth\";\r\n\r\nfunction AuthRoute({ component: Component, ...rest }) {\r\n    const { user } = useContext(AuthContext);\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) =>\r\n                user ? <Redirect to=\"/dashboard\" /> : <Component {...props} />\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nexport default AuthRoute;\r\n","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nimport { AuthContext } from \"./auth\";\r\n\r\nfunction ProtectRoute({ component: Component, ...rest }) {\r\n    const { user } = useContext(AuthContext);\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) =>\r\n                user ? <Component {...props} /> : <Redirect to=\"/\" />\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nexport default ProtectRoute;\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    menubarButton: {\r\n        fontSize: \"14px\",\r\n        paddingTop: \"0px\",\r\n        paddingBottom: \"0px\",\r\n        paddingLeft: theme.spacing(1),\r\n        paddingRight: theme.spacing(1),\r\n        flexShrink: 0,\r\n\r\n        textTransform: \"none\",\r\n    },\r\n    menuItem: {\r\n        fontSize: \"14px\",\r\n        width: \"128px\",\r\n    },\r\n    disabledMenuItem: {\r\n        cursor: \"default\",\r\n        color: \"rgb(180, 180, 180)!important\",\r\n        backgroundColor: \"white!important\",\r\n    },\r\n}));\r\n\r\nexport default function SimpleMenu(props) {\r\n    const classes = useStyles();\r\n    const { name, sections } = props.menu;\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                className={classes.menubarButton}\r\n                aria-controls=\"name\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleClick}\r\n                onKeyDown={(e) => {\r\n                    if (e.key === \"Enter\") {\r\n                        e.preventDefault();\r\n                    }\r\n                }}\r\n            >\r\n                {name}\r\n            </Button>\r\n            <Menu\r\n                id=\"name\"\r\n                anchorEl={anchorEl}\r\n                getContentAnchorEl={null}\r\n                anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\r\n                transformOrigin={{ vertical: \"top\", horizontal: \"left\" }}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={() => {\r\n                    setAnchorEl(null);\r\n                }}\r\n            >\r\n                {sections.map((section) => (\r\n                    <MenuItem\r\n                        className={clsx(classes.menuItem, {\r\n                            [classes.disabledMenuItem]:\r\n                                section.name === \"Save\" &&\r\n                                !document.getElementById(\"saveMain\"),\r\n                        })}\r\n                        onClick={() => {\r\n                            section.func();\r\n                            setAnchorEl(null);\r\n                        }}\r\n                    >\r\n                        {section.name}\r\n                    </MenuItem>\r\n                ))}\r\n            </Menu>\r\n        </div>\r\n    );\r\n}\r\n","import { gql } from \"apollo-boost\";\r\n\r\nexport const LOGOUT_Mutation = gql`\r\n    mutation {\r\n        logout\r\n    }\r\n`;\r\n","import { gql } from \"apollo-boost\";\r\n\r\nexport const DELUSER_Mutation = gql`\r\n    mutation deleteUser($email: String!) {\r\n        deleteUser(email: $email)\r\n    }\r\n`;\r\n","import { gql } from \"apollo-boost\";\r\n\r\nexport const UPLOAD_Mutation = gql`\r\n    mutation upload($id: String!, $picture: String!) {\r\n        upload(id: $id, picture: $picture)\r\n    }\r\n`;\r\n","import { createContext } from \"react\";\r\n\r\nconst AvatarContext = createContext({\r\n    avatar: String,\r\n    setAvatar: () => {},\r\n});\r\n\r\nexport { AvatarContext };\r\n","import React, {\r\n    useState,\r\n    useCallback,\r\n    useRef,\r\n    useEffect,\r\n    useContext,\r\n} from \"react\";\r\nimport ReactCrop from \"react-image-crop\";\r\nimport \"react-image-crop/dist/ReactCrop.css\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { UPLOAD_Mutation } from \"../../graphql/upload\";\r\nimport { AuthContext } from \"../../routes/auth\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { AvatarContext } from \"../../context/avatarContext\";\r\n\r\nasync function generateDownload(canvas, crop, upload, id, setAvatar) {\r\n    try {\r\n        if (!crop || !canvas) {\r\n            return;\r\n        }\r\n        let url = canvas.toDataURL(\"image/png\");\r\n        await upload({\r\n            variables: {\r\n                id,\r\n                picture: url,\r\n            },\r\n        });\r\n        setAvatar(url);\r\n    } catch (err) {\r\n        console.log(err);\r\n        return err;\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"60vw\",\r\n        height: \"60vh\",\r\n        padding: theme.spacing(0, 3),\r\n    },\r\n    dialogButtonWrapper: {\r\n        display: \"flex\",\r\n        width: \"50%\",\r\n        flexGrow: 1,\r\n    },\r\n    dialogButton: {\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        fontSize: \"18px\",\r\n        textTransform: \"none\",\r\n        textAlign: \"center\",\r\n    },\r\n    dialog: {},\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n}));\r\n\r\nexport default function UploadDialog(props) {\r\n    const classes = useStyles();\r\n    const { onClose, open } = props;\r\n\r\n    const {\r\n        user: { userId: id },\r\n    } = useContext(AuthContext);\r\n    const { setAvatar } = useContext(AvatarContext);\r\n    const [upload] = useMutation(UPLOAD_Mutation);\r\n    const [upImg, setUpImg] = useState();\r\n    const imgRef = useRef(null);\r\n    const previewCanvasRef = useRef(null);\r\n    const [crop, setCrop] = useState({\r\n        width: 50,\r\n        height: 50,\r\n        aspect: 1 / 1,\r\n    });\r\n    const [completedCrop, setCompletedCrop] = useState(null);\r\n\r\n    const onSelectFile = (e) => {\r\n        if (e.target.files && e.target.files.length > 0) {\r\n            const reader = new FileReader();\r\n            reader.addEventListener(\"load\", () => setUpImg(reader.result));\r\n            reader.readAsDataURL(e.target.files[0]);\r\n        }\r\n    };\r\n\r\n    const onLoad = useCallback((img) => {\r\n        imgRef.current = img;\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!completedCrop || !previewCanvasRef.current || !imgRef.current) {\r\n            return;\r\n        }\r\n\r\n        const image = imgRef.current;\r\n        const canvas = previewCanvasRef.current;\r\n        const crop = completedCrop;\r\n\r\n        const scaleX = image.naturalWidth / image.width;\r\n        const scaleY = image.naturalHeight / image.height;\r\n        const ctx = canvas.getContext(\"2d\");\r\n        const pixelRatio = window.devicePixelRatio;\r\n\r\n        canvas.width = crop.width * pixelRatio;\r\n        canvas.height = crop.height * pixelRatio;\r\n\r\n        ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n        ctx.imageSmoothingQuality = \"high\";\r\n\r\n        ctx.drawImage(\r\n            image,\r\n            crop.x * scaleX,\r\n            crop.y * scaleY,\r\n            crop.width * scaleX,\r\n            crop.height * scaleY,\r\n            0,\r\n            0,\r\n            crop.width,\r\n            crop.height\r\n        );\r\n    }, [completedCrop]);\r\n\r\n    return (\r\n        <Dialog\r\n            maxWidth=\"xl\"\r\n            open={open}\r\n            onClose={onClose}\r\n            aria-labelledby=\"avatarUpload\"\r\n        >\r\n            <DialogTitle id=\"avatarUpload\">Upload Avatar</DialogTitle>\r\n            <div className={classes.root}>\r\n                <ReactCrop\r\n                    src={upImg}\r\n                    onImageLoaded={onLoad}\r\n                    crop={crop}\r\n                    onChange={(c) => setCrop(c)}\r\n                    onComplete={(c) => setCompletedCrop(c)}\r\n                    circularCrop\r\n                    style={{\r\n                        maxHeight: \"100%\",\r\n                        maxWidth: \"100%\",\r\n                        overflow: \"auto\",\r\n                    }}\r\n                />\r\n                <div>\r\n                    <canvas\r\n                        ref={previewCanvasRef}\r\n                        // Rounding is important so the canvas width and height matches/is a multiple for sharpness.\r\n                        style={{\r\n                            width: Math.round(completedCrop?.width ?? 0),\r\n                            height: Math.round(completedCrop?.height ?? 0),\r\n                            display: \"none\",\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <DialogActions>\r\n                <input\r\n                    accept=\"image/*\"\r\n                    className={classes.input}\r\n                    id=\"contained-button-file\"\r\n                    type=\"file\"\r\n                    onChange={onSelectFile}\r\n                />\r\n                <label\r\n                    htmlFor=\"contained-button-file\"\r\n                    className={classes.dialogButtonWrapper}\r\n                >\r\n                    <Button\r\n                        className={classes.dialogButton}\r\n                        onClick={() => {}}\r\n                        color=\"primary\"\r\n                        component=\"span\"\r\n                    >\r\n                        Upload\r\n                    </Button>\r\n                </label>\r\n                <div className={classes.dialogButtonWrapper}>\r\n                    <Button\r\n                        className={classes.dialogButton}\r\n                        disabled={\r\n                            !completedCrop?.width || !completedCrop?.height\r\n                        }\r\n                        onClick={() => {\r\n                            generateDownload(\r\n                                previewCanvasRef.current,\r\n                                completedCrop,\r\n                                upload,\r\n                                id,\r\n                                setAvatar\r\n                            );\r\n                            onClose();\r\n                        }}\r\n                        color=\"primary\"\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                </div>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    dialogButton: {\r\n        width: \"128px\",\r\n        fontSize: \"18px\",\r\n        textTransform: \"none\",\r\n    },\r\n    dialog: {},\r\n}));\r\n\r\nexport default function DeleteUserDialog(props) {\r\n    const classes = useStyles();\r\n    const { delFunc, closeFunc } = props.func;\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            onClose={props.onClose}\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">\r\n                {\"Are you sure you want to delete this account?\"}\r\n            </DialogTitle>\r\n            <DialogActions>\r\n                <Button\r\n                    className={classes.dialogButton}\r\n                    onClick={delFunc}\r\n                    color=\"primary\"\r\n                >\r\n                    Yes\r\n                </Button>\r\n                <Button\r\n                    className={classes.dialogButton}\r\n                    onClick={closeFunc}\r\n                    color=\"primary\"\r\n                >\r\n                    No\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, { useContext, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { LOGOUT_Mutation } from \"../../graphql/logout\";\r\nimport { DELUSER_Mutation } from \"../../graphql/deleteUser\";\r\nimport { AuthContext } from \"../../routes/auth\";\r\nimport { getAccessToken, setAccessToken } from \"../../accessToken\";\r\n\r\nimport UploadDialog from \"./UploadDialog\";\r\nimport DeleteUserDialog from \"./deleteUserDialog\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    avatar: {\r\n        height: \"128px\",\r\n        width: \"128px\",\r\n        borderRadius: \"50%\",\r\n    },\r\n    headerAvatar: {\r\n        height: \"48px\",\r\n        width: \"48px\",\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        borderRadius: \"50%\",\r\n    },\r\n    headerAvatarWrapper: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    avatarWrapper: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        marginBottom: theme.spacing(3),\r\n    },\r\n    dialogButton: {\r\n        width: \"256px\",\r\n        fontSize: \"18px\",\r\n        textTransform: \"none\",\r\n    },\r\n    deleteButton: {\r\n        width: \"256px\",\r\n        fontSize: \"18px\",\r\n        textTransform: \"none\",\r\n        color: \"red\",\r\n    },\r\n    dialog: {},\r\n}));\r\n\r\nfunction SimpleDialog(props) {\r\n    const classes = useStyles();\r\n    const context = useContext(AuthContext);\r\n    const history = useHistory();\r\n    const [logout] = useMutation(LOGOUT_Mutation);\r\n\r\n    const { onClose, onOpen, selectedValue, open, avatar_src, func } = props;\r\n\r\n    const handleClose = () => {\r\n        onClose(selectedValue);\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            className={classes.dialog}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"account-dialog-title\"\r\n            open={open}\r\n        >\r\n            <DialogTitle id=\"account-dialog-title\">Account</DialogTitle>\r\n            <div className={classes.avatarWrapper}>\r\n                <img\r\n                    className={classes.avatar}\r\n                    src={avatar_src}\r\n                    alt=\"avatar\"\r\n                ></img>\r\n            </div>\r\n            <Button onClick={onOpen} className={classes.dialogButton}>\r\n                Change avatar\r\n            </Button>\r\n            <Button\r\n                className={classes.dialogButton}\r\n                onClick={async (e) => {\r\n                    e.preventDefault();\r\n                    await logout();\r\n                    setAccessToken(\"\");\r\n                    if (!getAccessToken()) {\r\n                        history.push(\"/\");\r\n                        context.logout();\r\n                    }\r\n                }}\r\n            >\r\n                Log out\r\n            </Button>\r\n            <Button className={classes.deleteButton} onClick={func}>\r\n                Delete User\r\n            </Button>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default function AccountDialog(props) {\r\n    const context = useContext(AuthContext);\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [logout] = useMutation(LOGOUT_Mutation);\r\n    const [open, setOpen] = useState(false);\r\n    const [delOpen, setDelOpen] = useState(false);\r\n    const [uploadOpen, setUploadOpen] = useState(false);\r\n    const [selectedValue, setSelectedValue] = useState(0);\r\n    const [delUser] = useMutation(DELUSER_Mutation);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (value) => {\r\n        setOpen(false);\r\n        setSelectedValue(value);\r\n    };\r\n\r\n    const handleUploadClose = () => {\r\n        setUploadOpen(false);\r\n    };\r\n\r\n    const closeFunc = () => {\r\n        setDelOpen(false);\r\n        handleClickOpen();\r\n    };\r\n\r\n    const delFunc = async (e) => {\r\n        e.preventDefault();\r\n        await delUser({ variables: { email: context.user.email } });\r\n        await logout();\r\n        setAccessToken(\"\");\r\n        if (!getAccessToken()) {\r\n            history.push(\"/\");\r\n            context.logout();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={classes.headerAvatarWrapper}>\r\n            <img\r\n                className={classes.headerAvatar}\r\n                src={props.src}\r\n                alt=\"#\"\r\n                onClick={handleClickOpen}\r\n            />\r\n            <DeleteUserDialog\r\n                open={delOpen}\r\n                func={{ delFunc, closeFunc }}\r\n                onClose={closeFunc}\r\n            />\r\n            <SimpleDialog\r\n                selectedValue={selectedValue}\r\n                open={open}\r\n                onClose={handleClose}\r\n                onOpen={() => {\r\n                    handleClose();\r\n                    setUploadOpen(true);\r\n                }}\r\n                func={() => {\r\n                    handleClose();\r\n                    setDelOpen(true);\r\n                }}\r\n                avatar_src={props.src}\r\n            />\r\n            <UploadDialog\r\n                open={uploadOpen}\r\n                onClose={() => {\r\n                    handleUploadClose();\r\n                    handleClickOpen();\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import { createContext } from \"react\";\r\n\r\nconst filecontext = createContext({\r\n  usernotes: [],\r\n  openFiles: [],\r\n  currentOpenFile: \"\",\r\n  setcurrentOpenFile: (data) => {},\r\n  setuserNotes: (data) => {},\r\n  setopenFiles: (data) => {},\r\n  actions: null,\r\n});\r\n\r\nexport { filecontext };\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { filecontext } from \"../../context/filetree\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    dialogButton: {\r\n        width: \"256px\",\r\n        fontSize: \"18px\",\r\n        textTransform: \"none\",\r\n    },\r\n    dialog: {},\r\n}));\r\n\r\nexport default function RenameDialog(props) {\r\n    const classes = useStyles();\r\n    const { usernotes, actions } = useContext(filecontext);\r\n    const [title, setTitle] = React.useState(\"\");\r\n    const [valid, setValid] = React.useState(true);\r\n    const [helper, setHelper] = React.useState(\"\");\r\n\r\n    const handleTitle = (val) => {\r\n        setTitle(val);\r\n        setValid(true);\r\n    };\r\n\r\n    const handleCreate = () => {\r\n        // check title validity\r\n        if (!title) {\r\n            setValid(false);\r\n            setHelper(\"empty name!\");\r\n            return;\r\n        }\r\n        if (usernotes.findIndex((notes) => notes.title === title) !== -1) {\r\n            setValid(false);\r\n            setHelper(\"name existed!\");\r\n            return;\r\n        }\r\n        actions.new(title);\r\n        props.closeFunc();\r\n    };\r\n\r\n    return (\r\n        <Dialog open={true} aria-labelledby=\"name-dialog-title\">\r\n            <DialogTitle id=\"name-dialog-title\">File name</DialogTitle>\r\n            <DialogContent>\r\n                <TextField\r\n                    autoFocus\r\n                    error={!valid}\r\n                    helperText={!valid ? helper : \"\"}\r\n                    margin=\"dense\"\r\n                    id=\"createBox\"\r\n                    label=\"new name\"\r\n                    fullWidth\r\n                    onChange={(e) => handleTitle(e.target.value)}\r\n                    onKeyDown={(e) => {\r\n                        if (e.key === \"Enter\") {\r\n                            e.preventDefault();\r\n                            handleCreate();\r\n                        }\r\n                    }}\r\n                />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={props.closeFunc} color=\"primary\">\r\n                    Cancel\r\n                </Button>\r\n                <Button onClick={handleCreate} color=\"primary\">\r\n                    OK\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/avatar.dae53026.jpg\";","export default __webpack_public_path__ + \"static/media/title.b86a37ea.jpg\";","import React, { useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport SimpleMenu from \"./MenuItem\";\r\nimport AccountDialog from \"./AccountDialog\";\r\nimport NewDialog from \"./NewDialog\";\r\nimport icon from \"../../icons/icon.jpg\";\r\nimport user from \"../../icons/avatar.jpg\";\r\nimport { AvatarContext } from \"../../context/avatarContext\";\r\nimport titleImg from \"../../icons/title.jpg\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    headerWrapper: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        flexWrap: \"nowrap\",\r\n        borderBottom: `1px solid ${theme.palette.divider}`,\r\n        zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    icon: {\r\n        height: \"48px\",\r\n        width: \"48px\",\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        borderRadius: \"50%\",\r\n    },\r\n    mainWrapper: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        flexGrow: 1,\r\n    },\r\n    titlebar: {\r\n        fontSize: \"20px\",\r\n        height: \"48px\",\r\n        border: \"1px transparent\",\r\n    },\r\n    titleImg: {\r\n        maxHeight: \"48px\",\r\n        objectFit: \"contain\",\r\n    },\r\n    menubar: {\r\n        minHeight: \"0px\",\r\n        padding: \"0px\",\r\n        overflowX: \"auto\",\r\n    },\r\n}));\r\n\r\nexport default function Header() {\r\n    const classes = useStyles();\r\n    const [openNewDialog, setOpenNewDialog] = React.useState(false);\r\n    const { avatar } = useContext(AvatarContext);\r\n\r\n    const file_menu = {\r\n        name: \"File\",\r\n        sections: [\r\n            {\r\n                name: \"New\",\r\n                func: () => {\r\n                    setOpenNewDialog(true);\r\n                },\r\n            },\r\n            {\r\n                name: \"Save\",\r\n                func: () => {\r\n                    let saveButton = document.getElementById(\"saveMain\");\r\n                    if (saveButton) {\r\n                        saveButton.click();\r\n                    }\r\n                },\r\n            },\r\n        ],\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Box className={classes.headerWrapper}>\r\n                <img className={classes.icon} src={icon} alt=\"#\" />\r\n                <Box className={classes.mainWrapper}>\r\n                    <div className={classes.titlebar}>\r\n                        <img src={titleImg} className={classes.titleImg} />\r\n                    </div>\r\n                    <Toolbar\r\n                        component=\"nav\"\r\n                        variant=\"dense\"\r\n                        className={classes.menubar}\r\n                    >\r\n                        <SimpleMenu menu={file_menu}></SimpleMenu>\r\n                        {openNewDialog ? (\r\n                            <NewDialog\r\n                                closeFunc={() => {\r\n                                    setOpenNewDialog(false);\r\n                                }}\r\n                            ></NewDialog>\r\n                        ) : null}\r\n                    </Toolbar>\r\n                </Box>\r\n                <IconButton style={{ display: \"none\" }}>\r\n                    <SettingsIcon fontSize=\"large\" />\r\n                </IconButton>\r\n                <AccountDialog src={avatar ? avatar : user}></AccountDialog>\r\n            </Box>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    dialogButton: {\r\n        width: \"128px\",\r\n        fontSize: \"18px\",\r\n        textTransform: \"none\",\r\n    },\r\n    dialog: {},\r\n}));\r\n\r\nexport default function SaveDialog(props) {\r\n    const classes = useStyles();\r\n    const { updFunc, closeFunc } = props.func;\r\n\r\n    return (\r\n        <Dialog open={true} aria-labelledby=\"save-dialog-title\">\r\n            <DialogTitle id=\"save-dialog-title\">Save File?</DialogTitle>\r\n            <DialogActions>\r\n                <Button\r\n                    className={classes.dialogButton}\r\n                    onClick={updFunc}\r\n                    color=\"primary\"\r\n                >\r\n                    Yes\r\n                </Button>\r\n                <Button\r\n                    className={classes.dialogButton}\r\n                    onClick={closeFunc}\r\n                    color=\"primary\"\r\n                >\r\n                    No\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport RemarkMathPlugin from \"remark-math\";\r\nimport { BlockMath, InlineMath } from \"react-katex\";\r\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\r\nimport { vscDarkPlus } from \"react-syntax-highlighter/dist/esm/styles/prism\";\r\nimport gfm from \"remark-gfm\";\r\nimport \"katex/dist/katex.min.css\";\r\n\r\nconst _mapProps = (props) => ({\r\n    ...props,\r\n    escapeHtml: false,\r\n    plugins: [[gfm, { singleTilde: false }], RemarkMathPlugin],\r\n    renderers: {\r\n        ...props.renderers,\r\n        code: ({ language, value }) => {\r\n            if (value) {\r\n                return (\r\n                    <SyntaxHighlighter\r\n                        style={vscDarkPlus}\r\n                        language={language}\r\n                        children={value}\r\n                    />\r\n                );\r\n            } else {\r\n                return (\r\n                    <>\r\n                        <>{\"~~~\" + language}</>\r\n                        <br></br>\r\n                        <>~~~</>\r\n                    </>\r\n                );\r\n            }\r\n        },\r\n        math: ({ value }) => <BlockMath>{value}</BlockMath>,\r\n        inlineMath: ({ value }) => <InlineMath>{value}</InlineMath>,\r\n    },\r\n});\r\n\r\nconst Markdown = (props) => <ReactMarkdown {..._mapProps(props)} />;\r\n\r\nexport default Markdown;\r\n","import { gql } from \"apollo-boost\";\r\n\r\nexport const UPDNOTE_Mutation = gql`\r\n    mutation updateNote(\r\n        $id: String!\r\n        $email: String!\r\n        $title: String\r\n        $markdown: String\r\n        $tags: [String]\r\n        $links: [String]\r\n    ) {\r\n        updateNote(\r\n            data: {\r\n                id: $id\r\n                email: $email\r\n                title: $title\r\n                markdown: $markdown\r\n                tags: $tags\r\n                links: $links\r\n            }\r\n        )\r\n    }\r\n`;\r\n","import { String } from \"core-js\";\r\nimport { createContext } from \"react\";\r\n\r\nconst mainContext = createContext({\r\n    mode: String,\r\n    setMode: () => {},\r\n    open: Boolean,\r\n    setOpen: () => {},\r\n    searchStr: String,\r\n    setSearchStr: () => {},\r\n    guide: String,\r\n});\r\n\r\nexport { mainContext };\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { filecontext } from \"../../context/filetree\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport SaveDialog from \"./SaveDialog\";\r\n\r\nimport Markdown from \"./Markdown\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { UPDNOTE_Mutation } from \"../../graphql/updateNote\";\r\nimport { AuthContext } from \"../../routes/auth\";\r\nimport { mainContext } from \"../../context/mainContext\";\r\n\r\nconst pageBarHeight = 24;\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        flexGrow: 1,\r\n    },\r\n    pageBar: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        alignItems: \"center\",\r\n        listStyle: \"none\",\r\n        margin: 0,\r\n        height: pageBarHeight,\r\n        overflowY: \"auto\",\r\n\r\n        backgroundColor: \"#E0E0E0\",\r\n    },\r\n    chip: {\r\n        margin: \"0px\",\r\n        borderRadius: \"0px\",\r\n        borderRight: `2px solid ${theme.palette.divider}`,\r\n        borderBottom: `1px solid ${theme.palette.divider}`,\r\n    },\r\n    chipRoot: {\r\n        transform: \"none\",\r\n        \"&:focus\": {\r\n            backgroundColor: \"white\",\r\n        },\r\n        \"&:hover\": {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n    chipText: {\r\n        width: theme.spacing(12),\r\n        textAlign: \"left\",\r\n        overflow: \"hidden\",\r\n        textOverflow: \"ellipsis\",\r\n    },\r\n    chipFocus: {\r\n        backgroundColor: \"white\",\r\n        borderBottom: \"1px solid white!important\",\r\n        \"&:hover\": {\r\n            backgroundColor: \"white\",\r\n        },\r\n    },\r\n    markdown: {\r\n        padding: theme.spacing(3, 0),\r\n    },\r\n    mainWindowWrapper: {\r\n        display: \"flex\",\r\n        flexGrow: 1,\r\n        position: \"relative\",\r\n    },\r\n    mainWindow: {\r\n        display: \"flex\",\r\n        width: \"50%\",\r\n        borderRadius: \"0px\",\r\n        overflow: \"auto\",\r\n    },\r\n    viewWindow: {\r\n        display: \"flex\",\r\n        width: \"50%\",\r\n        borderRadius: \"0px\",\r\n        overflow: \"auto\",\r\n    },\r\n    modeButtonWrapper: {\r\n        display: \"flex\",\r\n        position: \"absolute\",\r\n        top: theme.spacing(1),\r\n        right: theme.spacing(2),\r\n        borderRadius: \"16px\",\r\n        border: \"1px solid black\",\r\n        backgroundColor: \"white\",\r\n    },\r\n    nopad: {\r\n        padding: \"0px\",\r\n        margin: \"0px 3px\",\r\n    },\r\n    inputStyle: {\r\n        width: \"100%\",\r\n        height: \"calc(100vh - 130px)\",\r\n        fontSize: \"18px\",\r\n        padding: theme.spacing(2, 4),\r\n        resize: \"none\",\r\n        border: \"none\",\r\n        outline: \"none\",\r\n        overflow: \"auto\",\r\n    },\r\n    outputStyle: {\r\n        width: \"100%\",\r\n        height: \"calc(100vh - 130px)\",\r\n        fontSize: \"18px\",\r\n        textAlign: \"left\",\r\n        backgroundColor: \"white\",\r\n        padding: theme.spacing(2, 4),\r\n        overflow: \"auto\",\r\n    },\r\n}));\r\n\r\nexport default function Main() {\r\n    const [updNote] = useMutation(UPDNOTE_Mutation);\r\n    const {\r\n        user: { email },\r\n    } = useContext(AuthContext);\r\n    const { guide } = useContext(mainContext);\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const { usernotes, openFiles, currentOpenFile, actions } = useContext(\r\n        filecontext\r\n    );\r\n\r\n    const [mode, setMode] = React.useState(\"main\");\r\n    const [pageNum, setPageNum] = React.useState(0);\r\n    const [pages, setPages] = React.useState([]);\r\n    const [openDialog, setOpenDialog] = React.useState(false);\r\n    const [dialogFunctions, setDialogFunctions] = React.useState({});\r\n\r\n    // add page in frontend\r\n    const addPage = (node) => {\r\n        setPages([...pages, node]);\r\n        setPageNum(pageNum + 1);\r\n    };\r\n\r\n    useEffect(() => {\r\n        // add page in frontend\r\n        if (openFiles.length > pageNum) {\r\n            let fileID = openFiles[openFiles.length - 1];\r\n            let node = Object.assign(\r\n                { unsaved: false },\r\n                usernotes.find((e) => e.id === fileID)\r\n            );\r\n            addPage(node);\r\n        }\r\n        // delete page in frontend\r\n        if (openFiles.length < pageNum) {\r\n            let chipToDelete = pages.findIndex(\r\n                (e) => !openFiles.includes(e.id)\r\n            );\r\n            // set frontend pages\r\n            let updPages = pages.filter(\r\n                (data, index) => index !== chipToDelete\r\n            );\r\n            setPages(updPages);\r\n\r\n            // set pageNum\r\n            setPageNum(pageNum - 1);\r\n        }\r\n    }, [openFiles]);\r\n\r\n    // delete page\r\n    const handleDelete = (id) => {\r\n        let chipToDelete = openFiles.indexOf(id);\r\n        if (pages[chipToDelete].unsaved) {\r\n            setOpenDialog(true);\r\n            setDialogFunctions({\r\n                updFunc: async (e) => {\r\n                    await save(id);\r\n                    actions.close(id);\r\n                    setOpenDialog(false);\r\n                },\r\n                closeFunc: () => {\r\n                    actions.close(id);\r\n                    setOpenDialog(false);\r\n                },\r\n            });\r\n        } else {\r\n            actions.close(id);\r\n        }\r\n    };\r\n\r\n    const handleMode = (updMode) => {\r\n        setMode(updMode);\r\n    };\r\n\r\n    const handleContentData = (val) => {\r\n        let currentPageIndex = openFiles.indexOf(currentOpenFile);\r\n        let updPages = [...pages];\r\n        updPages[currentPageIndex].markdown = val;\r\n        updPages[currentPageIndex].unsaved = true;\r\n        setPages(updPages);\r\n    };\r\n\r\n    const save = async (fileID) => {\r\n        let currentPageIndex = openFiles.indexOf(fileID);\r\n        const { id, title, markdown, tags, unsaved } = pages[currentPageIndex];\r\n        if (unsaved) {\r\n            try {\r\n                const regex = /\\[\\[(\\w*?)\\]\\]/gm;\r\n                const str = markdown;\r\n                let g;\r\n                let links = [];\r\n                while ((g = regex.exec(str)) !== null) {\r\n                    // This is necessary to avoid infinite loops with zero-width matches\r\n                    if (g.index === regex.lastIndex) {\r\n                        regex.lastIndex++;\r\n                    }\r\n\r\n                    // The result can be accessed through the `m`-variable.\r\n                    g.forEach((match, groupIndex) => {\r\n                        if (groupIndex === 1) links.push(match);\r\n                    });\r\n                }\r\n                let newPages = [...pages];\r\n                newPages[currentPageIndex].links = links;\r\n                actions.save(fileID, {\r\n                    id,\r\n                    title,\r\n                    markdown,\r\n                    tags,\r\n                    links,\r\n                });\r\n                newPages[currentPageIndex].unsaved = false;\r\n                setPages(newPages);\r\n                await updNote({\r\n                    variables: { id, email, markdown, links },\r\n                });\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            {openFiles.length === 0 ? (\r\n                <div className={classes.mainWindowWrapper}>\r\n                    <Markdown className={`input ${classes.outputStyle}`}>\r\n                        {guide}\r\n                    </Markdown>\r\n                </div>\r\n            ) : (\r\n                <>\r\n                    <div className={classes.pageBar}>\r\n                        {openFiles.map((fileID, index) => {\r\n                            return (\r\n                                <li key={index}>\r\n                                    <Chip\r\n                                        size=\"small\"\r\n                                        label={\r\n                                            usernotes.find(\r\n                                                (e) => e.id === fileID\r\n                                            ).title\r\n                                        }\r\n                                        disableRipple={true}\r\n                                        onClick={(e) => {\r\n                                            actions.open(fileID);\r\n                                            document\r\n                                                .getElementsByClassName(\r\n                                                    \"input\"\r\n                                                )[0]\r\n                                                .focus();\r\n                                        }}\r\n                                        onDelete={() => handleDelete(fileID)}\r\n                                        className={clsx(classes.chip, {\r\n                                            [classes.chipFocus]:\r\n                                                fileID === currentOpenFile,\r\n                                        })}\r\n                                        classes={{\r\n                                            root: classes.chipRoot,\r\n                                            label: classes.chipText,\r\n                                        }}\r\n                                    />\r\n                                </li>\r\n                            );\r\n                        })}\r\n                        <div\r\n                            style={{\r\n                                flexGrow: 1,\r\n                                height: pageBarHeight,\r\n                                borderBottom: `1px solid ${theme.palette.divider}`,\r\n                            }}\r\n                        ></div>\r\n                    </div>\r\n                    <div className={classes.mainWindowWrapper}>\r\n                        <div className={classes.modeButtonWrapper}>\r\n                            <IconButton\r\n                                color={mode === \"main\" ? \"inherit\" : \"default\"}\r\n                                onClick={() => handleMode(\"main\")}\r\n                                classes={{\r\n                                    root: classes.nopad,\r\n                                }}\r\n                                disableRipple={true}\r\n                            >\r\n                                <EditIcon />\r\n                            </IconButton>\r\n                            <Divider\r\n                                orientation=\"vertical\"\r\n                                style={{\r\n                                    height: \"24px\",\r\n                                    backgroundColor: \"rgb(160, 160, 160)\",\r\n                                }}\r\n                            ></Divider>\r\n                            <IconButton\r\n                                color={mode === \"mix\" ? \"inherit\" : \"default\"}\r\n                                onClick={() => handleMode(\"mix\")}\r\n                                classes={{\r\n                                    root: classes.nopad,\r\n                                }}\r\n                                disableRipple={true}\r\n                            >\r\n                                <VisibilityIcon />\r\n                            </IconButton>\r\n                            {pageNum === openFiles.length &&\r\n                            pages[openFiles.indexOf(currentOpenFile)]\r\n                                .unsaved ? (\r\n                                <>\r\n                                    <Divider\r\n                                        orientation=\"vertical\"\r\n                                        style={{\r\n                                            height: \"24px\",\r\n                                            backgroundColor:\r\n                                                \"rgb(160, 160, 160)\",\r\n                                        }}\r\n                                    ></Divider>\r\n                                    <IconButton\r\n                                        id=\"saveMain\"\r\n                                        onClick={() => save(currentOpenFile)}\r\n                                        classes={{\r\n                                            root: classes.nopad,\r\n                                        }}\r\n                                        disableRipple={true}\r\n                                    >\r\n                                        <SaveIcon />\r\n                                    </IconButton>\r\n                                </>\r\n                            ) : null}\r\n                            {openDialog ? (\r\n                                <SaveDialog func={dialogFunctions}></SaveDialog>\r\n                            ) : null}\r\n                        </div>\r\n                        {mode === \"main\" || mode === \"mix\" ? (\r\n                            <Paper\r\n                                elevation={0}\r\n                                className={classes.mainWindow}\r\n                                style={mode === \"main\" ? { width: \"100%\" } : {}}\r\n                            >\r\n                                <textarea\r\n                                    autoFocus\r\n                                    className={`input ${classes.inputStyle}`}\r\n                                    value={\r\n                                        pageNum === openFiles.length\r\n                                            ? pages[\r\n                                                  openFiles.indexOf(\r\n                                                      currentOpenFile\r\n                                                  )\r\n                                              ].markdown\r\n                                            : \"\"\r\n                                    }\r\n                                    onChange={(e) => {\r\n                                        handleContentData(e.target.value);\r\n                                    }}\r\n                                ></textarea>\r\n                            </Paper>\r\n                        ) : (\r\n                            <></>\r\n                        )}\r\n                        {mode === \"mix\" ? (\r\n                            <Divider orientation=\"vertical\"></Divider>\r\n                        ) : null}\r\n                        {mode === \"view\" || mode === \"mix\" ? (\r\n                            <Paper\r\n                                elevation={0}\r\n                                className={classes.viewWindow}\r\n                                style={mode === \"view\" ? { width: \"100%\" } : {}}\r\n                            >\r\n                                <Markdown\r\n                                    className={`input ${classes.outputStyle}`}\r\n                                >\r\n                                    {pageNum === openFiles.length\r\n                                        ? pages[\r\n                                              openFiles.indexOf(currentOpenFile)\r\n                                          ].markdown\r\n                                        : \"\"}\r\n                                </Markdown>\r\n                            </Paper>\r\n                        ) : (\r\n                            <></>\r\n                        )}\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","import { gql } from \"apollo-boost\";\r\n\r\nexport const NOTES_QUERY = gql`\r\n    query usernotes($email: String!) {\r\n        usernotes(email: $email) {\r\n            id\r\n            tags\r\n            links\r\n            markdown\r\n            title\r\n        }\r\n    }\r\n`;\r\n","import { gql } from \"apollo-boost\";\r\n\r\nexport const AVATAR_QUERY = gql`\r\n    query userAvatar($id: String!) {\r\n        userAvatar(id: $id)\r\n    }\r\n`;\r\n","import { gql } from \"apollo-boost\";\r\n\r\nexport const GUIDE_QUERY = gql`\r\n    query {\r\n        user\r\n    }\r\n`;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\n\r\nimport { filecontext } from \"../../context/filetree\";\r\nimport { mainContext } from \"../../context/mainContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    titlebar: {\r\n        flexGrow: 1,\r\n        fontSize: \"14px\",\r\n        margin: theme.spacing(1),\r\n        outline: \"none\",\r\n        padding: \"1px 6px\",\r\n        borderRadius: \"12px\",\r\n        borderColor: `${theme.palette.divider}`,\r\n        \"&:focus\": {\r\n            borderColor: theme.palette.text.primary,\r\n        },\r\n    },\r\n    linksIOTitle: {\r\n        height: \"28px\",\r\n        padding: theme.spacing(2, 0),\r\n    },\r\n}));\r\n\r\nexport default function SearchBox() {\r\n    const classes = useStyles();\r\n    const { usernotes, actions } = useContext(filecontext);\r\n    const { searchStr, setSearchStr } = useContext(mainContext);\r\n    const [tagItem, setTagItem] = useState([]);\r\n    const [titleItem, setTitleItem] = useState([]);\r\n    const [mdItem, setMdItem] = useState([]);\r\n    const [openTitle, setOpenTitle] = useState(false);\r\n    const [openMd, setOpenMd] = useState(false);\r\n\r\n    const autoFocus = () => {\r\n        if (document.getElementsByClassName(\"input\")[0]) {\r\n            document.getElementsByClassName(\"input\")[0].focus();\r\n        }\r\n    };\r\n\r\n    const search = (e) => {\r\n        setSearchStr(e.target.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (searchStr) {\r\n            if (searchStr.slice(0, 5) === \"tags:\") {\r\n                let alltags = [];\r\n                usernotes.forEach((e) => {\r\n                    let { title, id, markdown } = e;\r\n                    e.tags.forEach((ele) => {\r\n                        if (ele === searchStr.slice(6)) {\r\n                            alltags.push({ title, id, markdown });\r\n                        }\r\n                    });\r\n                });\r\n                setTagItem(alltags);\r\n            } else {\r\n                let titlefiles = [];\r\n                let mdfiles = [];\r\n                usernotes.forEach((e) => {\r\n                    let { title, id, markdown } = e;\r\n                    if (e.title.includes(searchStr)) {\r\n                        titlefiles.push({ title, id, markdown });\r\n                    }\r\n                    if (e.markdown.includes(searchStr)) {\r\n                        mdfiles.push({ title, id, markdown });\r\n                    }\r\n                });\r\n                setTitleItem(titlefiles);\r\n                setMdItem(mdfiles);\r\n            }\r\n        } else {\r\n            setTitleItem([]);\r\n            setMdItem([]);\r\n        }\r\n\r\n        return () => {};\r\n    }, [searchStr]);\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            <div style={{ display: \"flex\" }}>\r\n                <input\r\n                    id=\"searchbox\"\r\n                    className={classes.titlebar}\r\n                    placeholder=\"Search files or tags\"\r\n                    onChange={search}\r\n                    value={searchStr}\r\n                />\r\n            </div>\r\n            <Divider style={{ height: \"3px\" }} />\r\n            <div style={{ flexGrow: 1, overflowY: \"auto\" }}>\r\n                <List disablePadding={true}>\r\n                    {searchStr.slice(0, 5) === \"tags:\" ? (\r\n                        tagItem.map((obj, index) => (\r\n                            <>\r\n                                <ListItem\r\n                                    button\r\n                                    key={index}\r\n                                    onClick={() => {\r\n                                        actions.open(obj.id);\r\n                                        autoFocus();\r\n                                    }}\r\n                                >\r\n                                    <ListItemText primary={obj.title} />\r\n                                </ListItem>\r\n                                <Divider />\r\n                            </>\r\n                        ))\r\n                    ) : (\r\n                        <>\r\n                            <ListItem\r\n                                button\r\n                                key=\"titleMatched\"\r\n                                onClick={() => setOpenTitle(!openTitle)}\r\n                                className={classes.linksIOTitle}\r\n                            >\r\n                                {openTitle ? (\r\n                                    <ExpandLessIcon />\r\n                                ) : (\r\n                                    <ExpandMoreIcon />\r\n                                )}\r\n                                <ListItemText primary={\"File\"} />\r\n                            </ListItem>\r\n                            <Divider />\r\n                            {openTitle\r\n                                ? titleItem.map((obj, index) => (\r\n                                      <>\r\n                                          <ListItem\r\n                                              button\r\n                                              key={index}\r\n                                              onClick={() => {\r\n                                                  actions.open(obj.id);\r\n                                                  autoFocus();\r\n                                              }}\r\n                                          >\r\n                                              <ListItemText\r\n                                                  primary={obj.title}\r\n                                              />\r\n                                          </ListItem>\r\n                                          <Divider />\r\n                                      </>\r\n                                  ))\r\n                                : null}\r\n                            <ListItem\r\n                                button\r\n                                key=\"mdMatched\"\r\n                                onClick={() => setOpenMd(!openMd)}\r\n                                className={classes.linksIOTitle}\r\n                            >\r\n                                {openMd ? (\r\n                                    <ExpandLessIcon />\r\n                                ) : (\r\n                                    <ExpandMoreIcon />\r\n                                )}\r\n                                <ListItemText primary={\"Content\"} />\r\n                            </ListItem>\r\n                            <Divider />\r\n                            {openMd\r\n                                ? mdItem.map((obj, index) => (\r\n                                      <>\r\n                                          <ListItem\r\n                                              button\r\n                                              key={index}\r\n                                              onClick={() => {\r\n                                                  actions.open(obj.id);\r\n                                                  autoFocus();\r\n                                              }}\r\n                                          >\r\n                                              <ListItemText\r\n                                                  primary={obj.title}\r\n                                              />\r\n                                          </ListItem>\r\n                                          <Divider />\r\n                                      </>\r\n                                  ))\r\n                                : null}\r\n                        </>\r\n                    )}\r\n                </List>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { filecontext } from \"../../context/filetree\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    dialogButton: {\r\n        width: \"256px\",\r\n        fontSize: \"18px\",\r\n        textTransform: \"none\",\r\n    },\r\n    dialog: {},\r\n}));\r\n\r\nexport default function RenameDialog(props) {\r\n    const classes = useStyles();\r\n    const { usernotes, actions } = useContext(filecontext);\r\n    const [title, setTitle] = React.useState(\"\");\r\n    const [valid, setValid] = React.useState(true);\r\n    const [helper, setHelper] = React.useState(\"\");\r\n\r\n    const handleTitle = (val) => {\r\n        setTitle(val);\r\n        setValid(true);\r\n    };\r\n\r\n    const handleRename = () => {\r\n        // check title validity\r\n        if (!title) {\r\n            setValid(false);\r\n            setHelper(\"empty name!\");\r\n            return;\r\n        }\r\n        if (usernotes.findIndex((notes) => notes.title === title) !== -1) {\r\n            setValid(false);\r\n            setHelper(\"name existed!\");\r\n            return;\r\n        }\r\n        actions.rename(props.fileID, title);\r\n        props.closeFunc();\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            open={true}\r\n            aria-labelledby={`form-dialog-title_${props.fileID}`}\r\n        >\r\n            <DialogTitle id={`form-dialog-title_${props.fileID}`}>\r\n                New name\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <TextField\r\n                    autoFocus\r\n                    error={!valid}\r\n                    helperText={!valid ? helper : \"\"}\r\n                    margin=\"dense\"\r\n                    id={`renameBox_${props.fileID}`}\r\n                    label=\"new name\"\r\n                    fullWidth\r\n                    onChange={(e) => handleTitle(e.target.value)}\r\n                    onKeyDown={(e) => {\r\n                        if (e.key === \"Enter\") {\r\n                            e.preventDefault();\r\n                            handleRename();\r\n                        }\r\n                    }}\r\n                />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={props.closeFunc} color=\"primary\">\r\n                    Cancel\r\n                </Button>\r\n                <Button onClick={handleRename} color=\"primary\">\r\n                    OK\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { filecontext } from \"../../context/filetree\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    dialogButton: {\r\n        width: \"128px\",\r\n        fontSize: \"18px\",\r\n        textTransform: \"none\",\r\n    },\r\n    dialog: {},\r\n}));\r\n\r\nexport default function DeleteDialog(props) {\r\n    const classes = useStyles();\r\n    const { actions } = useContext(filecontext);\r\n\r\n    return (\r\n        <Dialog\r\n            open={true}\r\n            aria-labelledby={`delete-dialog-title_${props.fileID}`}\r\n        >\r\n            <DialogTitle id={`delete-dialog-title_${props.fileID}`}>\r\n                {`Delete ${props.title}?`}\r\n            </DialogTitle>\r\n            <DialogActions>\r\n                <Button\r\n                    className={classes.dialogButton}\r\n                    onClick={() => {\r\n                        actions.delete(props.fileID);\r\n                        props.closeFunc();\r\n                    }}\r\n                    color=\"primary\"\r\n                >\r\n                    Yes\r\n                </Button>\r\n                <Button\r\n                    className={classes.dialogButton}\r\n                    onClick={props.closeFunc}\r\n                    color=\"primary\"\r\n                >\r\n                    No\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { filecontext } from \"../../context/filetree\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FolderIcon from \"@material-ui/icons/Folder\";\r\nimport InsertDriveFileIcon from \"@material-ui/icons/InsertDriveFile\";\r\n\r\nimport RenameDialog from \"./RenameDialog\";\r\nimport DeleteDialog from \"./DeleteDialog\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    labelIcon: {\r\n        marginRight: theme.spacing(0.5),\r\n    },\r\n    labelText: {\r\n        textAlign: \"left\",\r\n        fontSize: \"16px\",\r\n        fontWeight: \"inherit\",\r\n        overflow: \"hidden\",\r\n        whiteSpace: \"nowrap\",\r\n        textOverflow: \"ellipsis\",\r\n    },\r\n    menuItem: {\r\n        fontSize: \"14px\",\r\n        width: \"128px\",\r\n    },\r\n}));\r\n\r\nexport default function TreeMenu(props) {\r\n    const classes = useStyles();\r\n    const node = props.node;\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [openRenameDialog, setOpenRenameDialog] = React.useState(false);\r\n    const [openDeleteDialog, setOpenDeleteDialog] = React.useState(false);\r\n    const data = useContext(filecontext);\r\n    const { actions } = data;\r\n\r\n    const handleClick = (event) => {\r\n        event.preventDefault();\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div\r\n                onContextMenu={handleClick}\r\n                style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    position: \"relative\",\r\n                }}\r\n                onClick={(e) => {\r\n                    if (e.button === 0) {\r\n                        actions.open(node.id);\r\n                        if (document.getElementsByClassName(\"input\")[0])\r\n                            document.getElementsByClassName(\"input\")[0].focus();\r\n                    } else if (e.button === 2) {\r\n                        handleClick();\r\n                    }\r\n                }}\r\n            >\r\n                {node.type === \"dir\" ? (\r\n                    <FolderIcon\r\n                        fontSize=\"small\"\r\n                        className={classes.labelIcon}\r\n                    />\r\n                ) : (\r\n                    <InsertDriveFileIcon\r\n                        fontSize=\"small\"\r\n                        className={classes.labelIcon}\r\n                    />\r\n                )}\r\n\r\n                <Typography className={classes.labelText}>\r\n                    {node.title}\r\n                </Typography>\r\n            </div>\r\n            {node.type !== \"dir\" ? (\r\n                <Menu\r\n                    id=\"name\"\r\n                    anchorEl={anchorEl}\r\n                    getContentAnchorEl={null}\r\n                    anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\r\n                    transformOrigin={{ vertical: \"top\", horizontal: \"left\" }}\r\n                    keepMounted\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={() => {\r\n                        setAnchorEl(null);\r\n                    }}\r\n                    autoFocus={false}\r\n                >\r\n                    <MenuItem\r\n                        className={classes.menuItem}\r\n                        onClick={() => {\r\n                            setOpenRenameDialog(true);\r\n                            setAnchorEl(null);\r\n                        }}\r\n                        onKeyDown={(e) => {\r\n                            if (e.key === \"Enter\") {\r\n                                e.preventDefault();\r\n                            }\r\n                        }}\r\n                    >\r\n                        Rename\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                        className={classes.menuItem}\r\n                        onClick={() => {\r\n                            setOpenDeleteDialog(true);\r\n                            setAnchorEl(null);\r\n                        }}\r\n                    >\r\n                        Delete\r\n                    </MenuItem>\r\n                </Menu>\r\n            ) : null}\r\n            {openRenameDialog ? (\r\n                <RenameDialog\r\n                    fileID={node.id}\r\n                    closeFunc={() => setOpenRenameDialog(false)}\r\n                ></RenameDialog>\r\n            ) : null}\r\n            {openDeleteDialog ? (\r\n                <DeleteDialog\r\n                    fileID={node.id}\r\n                    title={node.title}\r\n                    closeFunc={() => setOpenDeleteDialog(false)}\r\n                ></DeleteDialog>\r\n            ) : null}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { filecontext } from \"../../context/filetree\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TreeView from \"@material-ui/lab/TreeView\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport TreeItem from \"@material-ui/lab/TreeItem\";\r\nimport TreeMenu from \"./TreeMenuItem\";\r\n\r\nimport { AuthContext } from \"../../routes/auth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: 110,\r\n        flexGrow: 1,\r\n        maxWidth: 400,\r\n        paddingTop: \"6px\",\r\n    },\r\n    labelIcon: {\r\n        marginRight: theme.spacing(0.5),\r\n    },\r\n    labelText: {\r\n        textAlign: \"left\",\r\n        fontSize: \"16px\",\r\n        fontWeight: \"inherit\",\r\n        overflow: \"hidden\",\r\n        whiteSpace: \"nowrap\",\r\n        textOverflow: \"ellipsis\",\r\n    },\r\n    colorWhite1: {\r\n        \"&.Mui-selected > .MuiTreeItem-content .MuiTreeItem-label\": {\r\n            backgroundColor: \"white\",\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function FolderTree() {\r\n    const classes = useStyles();\r\n    const data = useContext(filecontext);\r\n    const context = useContext(AuthContext);\r\n\r\n    const renderTree = (node) => (\r\n        <TreeItem\r\n            key={node.id}\r\n            nodeId={node.id}\r\n            label={<TreeMenu node={node}></TreeMenu>}\r\n            classes={{\r\n                root: classes.colorWhite1,\r\n            }}\r\n        >\r\n            {Array.isArray(node.usernotes)\r\n                ? node.usernotes.map((child) => renderTree(child))\r\n                : null}\r\n        </TreeItem>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <TreeView\r\n                className={classes.root}\r\n                defaultCollapseIcon={<ExpandMoreIcon />}\r\n                defaultExpanded={[\"root\"]}\r\n                defaultExpandIcon={<ChevronRightIcon />}\r\n            >\r\n                {renderTree({\r\n                    ...data,\r\n                    id: \"root\",\r\n                    title: context.user.name,\r\n                    type: \"dir\",\r\n                })}\r\n            </TreeView>\r\n        </>\r\n    );\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport FolderOutlinedIcon from \"@material-ui/icons/FolderOutlined\";\r\nimport DeviceHubIcon from \"@material-ui/icons/DeviceHub\";\r\n\r\nimport SearchBox from \"./SearchBox\";\r\nimport FolderTree from \"./FolderTree\";\r\nimport { mainContext } from \"../../context/mainContext\";\r\n\r\nconst sidebarWidth = 32;\r\nconst drawerWidth = 256;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: sidebarWidth,\r\n        display: \"flex\",\r\n    },\r\n    sidebarWrapper: {\r\n        width: sidebarWidth,\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        borderRight: `1px solid ${theme.palette.divider}`,\r\n    },\r\n    nopad: {\r\n        padding: \"0px\",\r\n        margin: \"6px 0px\",\r\n    },\r\n    rootShift: {\r\n        transition: theme.transitions.create([\"margin\", \"width\"], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: drawerWidth,\r\n    },\r\n    drawer: {\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaperWrapper: {\r\n        position: \"relative\",\r\n    },\r\n    drawerPaper: {\r\n        position: \"absolute\",\r\n        top: \"0px\",\r\n        right: sidebarWidth,\r\n        width: drawerWidth,\r\n        bottom: \"0px\",\r\n    },\r\n}));\r\n\r\nexport default function PersistentDrawerLeft() {\r\n    const classes = useStyles();\r\n    const { open, setOpen, mode, setMode } = useContext(mainContext);\r\n    // const [open, setOpen] = useState(false);\r\n    // const [mode, setMode] = useState(\"search\");\r\n    const [graphMode, setGraph] = useState(false);\r\n\r\n    const handleMode = (updMode) => {\r\n        setMode(updMode);\r\n        if (!open) {\r\n            setOpen(true);\r\n        }\r\n        if (open && updMode === mode) {\r\n            setOpen(false);\r\n        }\r\n    };\r\n\r\n    const handleGraphMode = () => {\r\n        setGraph(!graphMode);\r\n    };\r\n\r\n    return (\r\n        <div className={clsx(classes.root, { [classes.rootShift]: open })}>\r\n            <CssBaseline />\r\n            <div className={classes.sidebarWrapper}>\r\n                <IconButton\r\n                    color={mode === \"search\" && open ? \"inherit\" : \"default\"}\r\n                    aria-label=\"open drawer\"\r\n                    onClick={() => handleMode(\"search\")}\r\n                    classes={{\r\n                        root: classes.nopad,\r\n                    }}\r\n                    disableRipple={true}\r\n                >\r\n                    <SearchIcon />\r\n                </IconButton>\r\n                <IconButton\r\n                    color={mode === \"file\" && open ? \"inherit\" : \"default\"}\r\n                    aria-label=\"open drawer\"\r\n                    onClick={() => handleMode(\"file\")}\r\n                    classes={{\r\n                        root: classes.nopad,\r\n                    }}\r\n                    disableRipple={true}\r\n                >\r\n                    <FolderOutlinedIcon />\r\n                </IconButton>\r\n                <IconButton\r\n                    color={graphMode ? \"inherit\" : \"default\"}\r\n                    aria-label=\"open drawer\"\r\n                    onClick={handleGraphMode}\r\n                    classes={{\r\n                        root: classes.nopad,\r\n                    }}\r\n                    style={{ display: \"none\" }}\r\n                    disableRipple={true}\r\n                >\r\n                    <DeviceHubIcon />\r\n                </IconButton>\r\n            </div>\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={open}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                    docked: classes.drawerPaperWrapper,\r\n                }}\r\n            >\r\n                {mode === \"search\" ? (\r\n                    <SearchBox></SearchBox>\r\n                ) : (\r\n                    <FolderTree></FolderTree>\r\n                )}\r\n            </Drawer>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport LinkIcon from \"@material-ui/icons/Link\";\r\nimport LocalOfferOutlinedIcon from \"@material-ui/icons/LocalOfferOutlined\";\r\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\n\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nimport { filecontext } from \"../../context/filetree\";\r\nimport { mainContext } from \"../../context/mainContext\";\r\nimport { SettingsInputComponentOutlined } from \"@material-ui/icons\";\r\n\r\nconst sidebarWidth = 32;\r\nconst drawerWidth = 256;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: sidebarWidth,\r\n        display: \"flex\",\r\n    },\r\n    sidebarWrapper: {\r\n        width: sidebarWidth,\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        borderLeft: `1px solid ${theme.palette.divider}`,\r\n    },\r\n    nopad: {\r\n        padding: \"0px\",\r\n        margin: \"6px 0px\",\r\n    },\r\n    rootShift: {\r\n        transition: theme.transitions.create([\"margin\", \"width\"], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: drawerWidth,\r\n    },\r\n    drawer: {\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaperWrapper: {\r\n        position: \"relative\",\r\n    },\r\n    drawerPaper: {\r\n        position: \"absolute\",\r\n        top: \"0px\",\r\n        right: sidebarWidth,\r\n        width: drawerWidth,\r\n        bottom: \"0px\",\r\n    },\r\n    drawerButton: {\r\n        width: \"36px\",\r\n        padding: \"0px\",\r\n        margin: \"6px 0px 6px 6px\",\r\n    },\r\n    linksIOTitle: {\r\n        height: \"28px\",\r\n        padding: theme.spacing(2, 0),\r\n    },\r\n}));\r\n\r\nexport default function PersistentDrawerRight() {\r\n    const classes = useStyles();\r\n    const { currentOpenFile, usernotes, actions } = useContext(filecontext);\r\n    const { setSearchStr, setOpen, setMode } = useContext(mainContext);\r\n    const [r_open, setr_open] = useState(false);\r\n    const [r_mode, setr_Mode] = useState(\"link\");\r\n\r\n    //links, tags to be showed\r\n    const [inlinks, setInLink] = useState([]);\r\n    const [outlinks, setOutLink] = useState([]);\r\n    const [openIn, setOpenIn] = useState(false);\r\n    const [openOut, setOpenOut] = useState(false);\r\n\r\n    useEffect(() => {\r\n        try {\r\n            if (currentOpenFile) {\r\n                let title = usernotes.find((e) => e.id === currentOpenFile)\r\n                    .title;\r\n                let inLinks = {};\r\n                let outLinks = {};\r\n                let tmp = usernotes.find((e) => e.id === currentOpenFile).links;\r\n                usernotes.forEach((e) => {\r\n                    e.links.forEach((ele) => {\r\n                        if (ele === title) {\r\n                            if (!Object.keys(inLinks).includes(e.title)) {\r\n                                inLinks[e.title] = e.id;\r\n                            }\r\n                        }\r\n                    });\r\n                });\r\n                setInLink(Object.entries(inLinks));\r\n                usernotes.forEach((e) => {\r\n                    if (tmp.includes(e.title)) {\r\n                        outLinks[e.title] = e.id;\r\n                    }\r\n                });\r\n                setOutLink(Object.entries(outLinks));\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        return () => {};\r\n    }, [usernotes, currentOpenFile]);\r\n\r\n    const [tags, setTag] = useState([]);\r\n\r\n    useEffect(() => {\r\n        let alltags = {};\r\n        usernotes.forEach((e) => {\r\n            e.tags.forEach((ele) => {\r\n                if (Object.keys(alltags).includes(ele)) {\r\n                    alltags[ele] += 1;\r\n                } else {\r\n                    alltags[ele] = 1;\r\n                }\r\n            });\r\n        });\r\n        setTag(Object.entries(alltags));\r\n        return () => {};\r\n    }, [usernotes]);\r\n    const [showingItem, setShowingItem] = useState([]);\r\n    useEffect(() => {\r\n        setShowingItem(r_mode === \"link\" ? inlinks : tags);\r\n        return () => {};\r\n    }, [r_mode, inlinks, outlinks, tags]);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setr_open(!r_open);\r\n    };\r\n\r\n    const handleMode = (updMode) => {\r\n        setr_Mode(updMode);\r\n    };\r\n\r\n    const handleSearch = (tag) => {\r\n        setSearchStr(\"tags: \" + tag);\r\n        setOpen(true);\r\n        setMode(\"search\");\r\n    };\r\n\r\n    const handleLink = (id) => {\r\n        actions.open(id);\r\n        if (document.getElementsByClassName(\"input\")[0])\r\n            document.getElementsByClassName(\"input\")[0].focus();\r\n    };\r\n\r\n    return (\r\n        <div className={clsx(classes.root, { [classes.rootShift]: r_open })}>\r\n            <CssBaseline />\r\n            <div className={classes.sidebarWrapper}>\r\n                <IconButton\r\n                    color=\"default\"\r\n                    aria-label=\"open drawer\"\r\n                    onClick={handleDrawerOpen}\r\n                    classes={{\r\n                        root: classes.nopad,\r\n                    }}\r\n                    disableRipple={true}\r\n                >\r\n                    {r_open ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n                </IconButton>\r\n            </div>\r\n\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"right\"\r\n                open={r_open}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                    docked: classes.drawerPaperWrapper,\r\n                }}\r\n            >\r\n                <div style={{ display: \"flex\" }}>\r\n                    <IconButton\r\n                        color={r_mode === \"link\" ? \"inherit\" : \"default\"}\r\n                        onClick={() => handleMode(\"link\")}\r\n                        classes={{\r\n                            root: classes.drawerButton,\r\n                        }}\r\n                        disableRipple={true}\r\n                    >\r\n                        <LinkIcon />\r\n                    </IconButton>\r\n                    <IconButton\r\n                        color={r_mode === \"tag\" ? \"inherit\" : \"default\"}\r\n                        onClick={() => handleMode(\"tag\")}\r\n                        classes={{\r\n                            root: classes.drawerButton,\r\n                        }}\r\n                        disableRipple={true}\r\n                    >\r\n                        <LocalOfferOutlinedIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <Divider style={{ height: \"3px\" }} />\r\n                <div style={{ flexGrow: 1, overflowY: \"auto\" }}>\r\n                    <List disablePadding={true}>\r\n                        {r_mode === \"tag\" ? (\r\n                            tags.map((text, index) => (\r\n                                <>\r\n                                    <ListItem\r\n                                        button\r\n                                        key={index}\r\n                                        onClick={() => {\r\n                                            handleSearch(text[0]);\r\n                                        }}\r\n                                    >\r\n                                        <ListItemText\r\n                                            primary={\"# \" + text[0]}\r\n                                        />\r\n                                        <ListItemText\r\n                                            primary={text[1]}\r\n                                            style={{ textAlign: \"right\" }}\r\n                                        />\r\n                                    </ListItem>\r\n                                    <Divider />\r\n                                </>\r\n                            ))\r\n                        ) : (\r\n                            <>\r\n                                <ListItem\r\n                                    button\r\n                                    key=\"inLinks\"\r\n                                    onClick={() => setOpenIn(!openIn)}\r\n                                    className={classes.linksIOTitle}\r\n                                >\r\n                                    {openIn ? (\r\n                                        <ExpandLessIcon />\r\n                                    ) : (\r\n                                        <ExpandMoreIcon />\r\n                                    )}\r\n                                    <ListItemText primary={\"Linked from...\"} />\r\n                                </ListItem>\r\n                                <Divider />\r\n                                {openIn\r\n                                    ? inlinks.map((text, index) => (\r\n                                          <>\r\n                                              <ListItem\r\n                                                  button\r\n                                                  key={index}\r\n                                                  onClick={() => {\r\n                                                      handleLink(text[1]);\r\n                                                  }}\r\n                                              >\r\n                                                  <ListItemText\r\n                                                      primary={text[0]}\r\n                                                  />\r\n                                              </ListItem>\r\n                                              <Divider />\r\n                                          </>\r\n                                      ))\r\n                                    : null}\r\n                                <ListItem\r\n                                    button\r\n                                    key=\"outLinks\"\r\n                                    onClick={() => setOpenOut(!openOut)}\r\n                                    className={classes.linksIOTitle}\r\n                                >\r\n                                    {openOut ? (\r\n                                        <ExpandLessIcon />\r\n                                    ) : (\r\n                                        <ExpandMoreIcon />\r\n                                    )}\r\n                                    <ListItemText primary={\"Link to...\"} />\r\n                                </ListItem>\r\n                                <Divider />\r\n                                {openOut\r\n                                    ? outlinks.map((text, index) => (\r\n                                          <>\r\n                                              <ListItem\r\n                                                  button\r\n                                                  key={index}\r\n                                                  onClick={() => {\r\n                                                      handleLink(text[1]);\r\n                                                  }}\r\n                                              >\r\n                                                  <ListItemText\r\n                                                      primary={text[0]}\r\n                                                  />\r\n                                              </ListItem>\r\n                                              <Divider />\r\n                                          </>\r\n                                      ))\r\n                                    : null}\r\n                            </>\r\n                        )}\r\n                    </List>\r\n                </div>\r\n            </Drawer>\r\n        </div>\r\n    );\r\n}\r\n","import { gql } from \"apollo-boost\";\r\n\r\nexport const ADDTAG_Mutation = gql`\r\n    mutation addtag($id: String!, $email: String!, $tag: String!) {\r\n        addtag(id: $id, email: $email, tag: $tag)\r\n    }\r\n`;\r\n","import { gql } from \"apollo-boost\";\r\n\r\nexport const DELTAG_Mutation = gql`\r\n    mutation deletetag($id: String!, $email: String!, $index: Int!) {\r\n        deletetag(id: $id, email: $email, index: $index)\r\n    }\r\n`;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { Popover } from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nimport { filecontext } from \"../../context/filetree\";\r\nimport { AuthContext } from \"../../routes/auth\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { ADDTAG_Mutation } from \"../../graphql/addTag\";\r\nimport { DELTAG_Mutation } from \"../../graphql/delTag\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        alignItems: \"center\",\r\n        listStyle: \"none\",\r\n        margin: 0,\r\n        height: \"32px\",\r\n        overflowY: \"auto\",\r\n    },\r\n    chip: {\r\n        margin: theme.spacing(0.5),\r\n    },\r\n    titlebar: {\r\n        flexGrow: 1,\r\n        fontSize: \"14px\",\r\n        margin: theme.spacing(0.5),\r\n        outline: \"none\",\r\n        padding: \"1px 6px\",\r\n        borderRadius: \"12px\",\r\n        borderColor: `${theme.palette.divider}`,\r\n        \"&:focus\": {\r\n            borderColor: theme.palette.text.primary,\r\n        },\r\n    },\r\n    alert: {\r\n        width: \"256px\",\r\n    },\r\n}));\r\n\r\nexport default function TagBar() {\r\n    const classes = useStyles();\r\n    const { currentOpenFile, usernotes, setuserNotes } = useContext(\r\n        filecontext\r\n    );\r\n    const [anchorEle, setAnchorEle] = useState(null);\r\n\r\n    const handleClose = () => {\r\n        setAnchorEle(null);\r\n    };\r\n    React.useEffect(() => {\r\n        if (anchorEle) {\r\n            setTimeout(function () {\r\n                setAnchorEle(null);\r\n            }, 1300); //1.3 Second delay\r\n        }\r\n    }, [anchorEle]);\r\n    const open = Boolean(anchorEle);\r\n    const id = open ? \"simple-popover\" : undefined;\r\n\r\n    const context = useContext(AuthContext);\r\n    const [addtag] = useMutation(ADDTAG_Mutation);\r\n    const [deltag] = useMutation(DELTAG_Mutation);\r\n    const [tag, setTag] = useState(\"\");\r\n\r\n    const [chipData, setChipData] = useState([]);\r\n    useEffect(() => {\r\n        if (currentOpenFile && usernotes) {\r\n            setChipData(usernotes.find((e) => e.id === currentOpenFile).tags);\r\n        }\r\n        return () => {};\r\n    }, [currentOpenFile, usernotes]);\r\n\r\n    const updTag = (e) => {\r\n        setTag(e.target.value);\r\n    };\r\n\r\n    const handleDelete = async (chipToDelete) => {\r\n        try {\r\n            let chips = chipData.filter(\r\n                (data, index) => index !== chipToDelete\r\n            );\r\n            setChipData(chips);\r\n            let newnotes = [...usernotes];\r\n            newnotes\r\n                .find((e) => e.id === currentOpenFile)\r\n                .tags.splice(chipToDelete, 1);\r\n            setuserNotes(newnotes);\r\n            await deltag({\r\n                variables: {\r\n                    id: currentOpenFile,\r\n                    email: context.user.email,\r\n                    index: chipToDelete,\r\n                },\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    const newTag = async (e) => {\r\n        if (e.key === \"Enter\" && e.target.value !== \"\" && currentOpenFile) {\r\n            try {\r\n                if (chipData.includes(tag)) {\r\n                    setAnchorEle(document.body);\r\n                    return;\r\n                }\r\n                let newnotes = [...usernotes];\r\n                newnotes.find((e) => e.id === currentOpenFile).tags.push(tag);\r\n                setuserNotes(newnotes);\r\n                setChipData([...chipData, tag]);\r\n                e.target.value = \"\";\r\n                await addtag({\r\n                    variables: {\r\n                        id: currentOpenFile,\r\n                        email: context.user.email,\r\n                        tag,\r\n                    },\r\n                });\r\n                setTag(\"\");\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            <div className={classes.root}>\r\n                {chipData.map((data, index) => {\r\n                    return (\r\n                        <li key={index}>\r\n                            <Chip\r\n                                size=\"small\"\r\n                                label={data}\r\n                                onDelete={() => handleDelete(index)}\r\n                                className={classes.chip}\r\n                            />\r\n                        </li>\r\n                    );\r\n                })}\r\n                <input\r\n                    id=\"taginput\"\r\n                    className={classes.titlebar}\r\n                    placeholder=\"New tags\"\r\n                    onChange={updTag}\r\n                    onKeyDown={newTag}\r\n                />\r\n                <Popover\r\n                    id={id}\r\n                    open={open}\r\n                    anchorEl={anchorEle}\r\n                    onClose={handleClose}\r\n                    anchorOrigin={{\r\n                        vertical: \"top\",\r\n                        horizontal: \"center\",\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: \"top\",\r\n                        horizontal: \"center\",\r\n                    }}\r\n                >\r\n                    <Alert className={classes.alert} severity=\"warning\">\r\n                        Tag Already Exists!\r\n                    </Alert>\r\n                </Popover>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import { gql } from \"apollo-boost\";\r\n\r\nexport const ADDNOTE_Mutation = gql`\r\n    mutation createNote(\r\n        $email: String!\r\n        $title: String!\r\n        $markdown: String!\r\n        $tags: [String]!\r\n        $links: [String]!\r\n    ) {\r\n        createNote(\r\n            data: {\r\n                email: $email\r\n                title: $title\r\n                markdown: $markdown\r\n                tags: $tags\r\n                links: $links\r\n            }\r\n        ) {\r\n            id\r\n            tags\r\n            title\r\n            markdown\r\n            links\r\n        }\r\n    }\r\n`;\r\n","import { gql } from \"apollo-boost\";\r\n\r\nexport const DELNOTE_Mutation = gql`\r\n    mutation deleteNote($id: String!, $email: String!) {\r\n        deleteNote(id: $id, email: $email)\r\n    }\r\n`;\r\n","import { useReducer, useContext } from \"react\";\r\nimport { ADDNOTE_Mutation } from \"../../graphql/createNote\";\r\nimport { DELNOTE_Mutation } from \"../../graphql/deleteNote\";\r\nimport { UPDNOTE_Mutation } from \"../../graphql/updateNote\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { AuthContext } from \"../../routes/auth\";\r\n\r\nfunction actionReducer(state, action) {\r\n    let updOpenFiles = [];\r\n    let updCurrentOpenFile = \"\";\r\n\r\n    switch (action.type) {\r\n        case \"SET\":\r\n            return action.updData;\r\n        case \"NEW\":\r\n            return {\r\n                usernotes: [...state.usernotes, action.data],\r\n                openFiles: [...state.openFiles, action.id],\r\n                currentOpenFile: action.id,\r\n            };\r\n        case \"OPEN\":\r\n            if (action.id === \"root\") {\r\n                return state;\r\n            }\r\n            if (!state.openFiles.includes(action.id)) {\r\n                return {\r\n                    ...state,\r\n                    openFiles: [...state.openFiles, action.id],\r\n                    currentOpenFile: action.id,\r\n                };\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    currentOpenFile: action.id,\r\n                };\r\n            }\r\n        case \"RENAME\":\r\n            return {\r\n                ...state,\r\n                usernotes: action.data,\r\n            };\r\n        case \"DELETE\":\r\n            updCurrentOpenFile = state.currentOpenFile;\r\n            updOpenFiles = state.openFiles.filter((e) => e !== action.id);\r\n            if (action.id === state.currentOpenFile) {\r\n                let idx = state.openFiles.indexOf(state.currentOpenFile);\r\n                if (idx > 0) {\r\n                    updCurrentOpenFile = state.openFiles[idx - 1];\r\n                } else if (idx === 0 && state.openFiles.length > 1) {\r\n                    updCurrentOpenFile = state.openFiles[1];\r\n                } else {\r\n                    updCurrentOpenFile = \"\";\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                usernotes: action.data,\r\n                openFiles: updOpenFiles,\r\n                currentOpenFile: updCurrentOpenFile,\r\n            };\r\n        case \"CLOSE\":\r\n            updCurrentOpenFile = state.currentOpenFile;\r\n            updOpenFiles = state.openFiles.filter((e) => e !== action.id);\r\n            if (action.id === state.currentOpenFile) {\r\n                let idx = state.openFiles.indexOf(state.currentOpenFile);\r\n                if (idx > 0) {\r\n                    updCurrentOpenFile = state.openFiles[idx - 1];\r\n                } else if (idx === 0 && state.openFiles.length > 1) {\r\n                    updCurrentOpenFile = state.openFiles[1];\r\n                } else {\r\n                    updCurrentOpenFile = \"\";\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                openFiles: updOpenFiles,\r\n                currentOpenFile: updCurrentOpenFile,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction FileActions(initialState) {\r\n    const [state, dispatch] = useReducer(actionReducer, initialState);\r\n    const [newNote] = useMutation(ADDNOTE_Mutation);\r\n    const [delNote] = useMutation(DELNOTE_Mutation);\r\n    const [updNote] = useMutation(UPDNOTE_Mutation);\r\n    const {\r\n        user: { email },\r\n    } = useContext(AuthContext);\r\n\r\n    function setUserNotes(data) {\r\n        dispatch({\r\n            type: \"SET\",\r\n            updData: {\r\n                ...state,\r\n                usernotes: data,\r\n            },\r\n        });\r\n    }\r\n    function setOpenFiles(data) {\r\n        dispatch({\r\n            type: \"SET\",\r\n            updData: {\r\n                ...state,\r\n                openFiles: data,\r\n            },\r\n        });\r\n    }\r\n    function setCurrentOpenFile(data) {\r\n        dispatch({\r\n            type: \"SET\",\r\n            updData: {\r\n                ...state,\r\n                currentOpenFile: data,\r\n            },\r\n        });\r\n    }\r\n    async function newFile(title) {\r\n        try {\r\n            const a = await newNote({\r\n                variables: {\r\n                    email,\r\n                    title,\r\n                    markdown: \"\",\r\n                    tags: [],\r\n                    links: [],\r\n                },\r\n            });\r\n            dispatch({\r\n                type: \"NEW\",\r\n                id: a.data.createNote.id,\r\n                data: a.data.createNote,\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    function openFile(id) {\r\n        dispatch({\r\n            type: \"OPEN\",\r\n            id: id,\r\n        });\r\n    }\r\n    function saveFile(id, data) {\r\n        let newNotes = [...state.usernotes];\r\n        let idx = newNotes.findIndex((e) => e.id === id);\r\n        newNotes[idx] = data;\r\n        setUserNotes(newNotes);\r\n    }\r\n    function closeFile(id) {\r\n        dispatch({\r\n            type: \"CLOSE\",\r\n            id: id,\r\n        });\r\n    }\r\n    async function renameFile(id, title) {\r\n        try {\r\n            let data = [...state.usernotes];\r\n            data.find((e) => e.id === id).title = title;\r\n            dispatch({\r\n                type: \"RENAME\",\r\n                id,\r\n                data,\r\n            });\r\n            await updNote({ variables: { id, email, title } });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    async function deleteFile(id) {\r\n        // TODO: delete file in backend, return new usernotes data\r\n        try {\r\n            let data = [...state.usernotes];\r\n            let idx = data.findIndex((e) => e.id === id);\r\n            data.splice(idx, 1);\r\n            dispatch({\r\n                type: \"DELETE\",\r\n                id,\r\n                data,\r\n            });\r\n            await delNote({ variables: { id, email } });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    return {\r\n        usernotes: state.usernotes,\r\n        openFiles: state.openFiles,\r\n        currentOpenFile: state.currentOpenFile,\r\n        setuserNotes: setUserNotes,\r\n        setopenFiles: setOpenFiles,\r\n        setcurrentOpenFile: setCurrentOpenFile,\r\n        actions: {\r\n            new: newFile,\r\n            open: openFile,\r\n            save: saveFile,\r\n            close: closeFile,\r\n            rename: renameFile,\r\n            delete: deleteFile,\r\n        },\r\n    };\r\n}\r\n\r\nexport { FileActions };\r\n","import React from \"react\";\r\nimport ReactLoading from \"react-loading\";\r\n\r\nconst Example = ({ type, color }) => (\r\n    <ReactLoading type={type} color={color} height={180} width={180} />\r\n);\r\n\r\nexport default Example;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Header from \"./Header\";\r\nimport Main from \"./Main\";\r\nimport { filecontext } from \"../../context/filetree\";\r\nimport { AvatarContext } from \"../../context/avatarContext\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { NOTES_QUERY } from \"../../graphql/notes\";\r\nimport { AVATAR_QUERY } from \"../../graphql/getAvatar\";\r\nimport { GUIDE_QUERY } from \"../../graphql/noti\";\r\nimport { AuthContext } from \"../../routes/auth\";\r\n\r\nimport PersistentDrawerLeft from \"./LeftDrawer\";\r\nimport PersistentDrawerRight from \"./RightDrawer\";\r\nimport TagBar from \"./TagBar\";\r\n\r\nimport { FileActions } from \"./FileActions\";\r\nimport { mainContext } from \"../../context/mainContext\";\r\n\r\nimport Loading from \"../../routes/loading\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    mainGrid: {\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    pageContainer: {\r\n        width: \"100vw\",\r\n        height: \"100vh\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n    },\r\n}));\r\n\r\nexport default function Page_1_0() {\r\n    const classes = useStyles();\r\n    const {\r\n        user: { email, userId: id },\r\n    } = useContext(AuthContext);\r\n    const [mode, setMode] = useState(\"search\");\r\n    const [open, setOpen] = useState(false);\r\n    const [searchStr, setSearchStr] = useState(\"\");\r\n\r\n    const { loading, error, data } = useQuery(NOTES_QUERY, {\r\n        variables: { email },\r\n    });\r\n\r\n    const { loading: ava_loading, error: ava_error, data: ava_data } = useQuery(\r\n        AVATAR_QUERY,\r\n        {\r\n            variables: { id },\r\n        }\r\n    );\r\n    const [avatar, setAvatar] = useState(\"\");\r\n    useEffect(() => {\r\n        if (!ava_loading && !ava_error) {\r\n            setAvatar(ava_data.userAvatar);\r\n        }\r\n        return () => {};\r\n    }, [ava_loading]);\r\n\r\n    const {\r\n        loading: guide_loading,\r\n        error: guide_error,\r\n        data: guide_data,\r\n    } = useQuery(GUIDE_QUERY);\r\n    const [guide, setGuide] = useState(\"\");\r\n    useEffect(() => {\r\n        if (!guide_loading && !guide_error) {\r\n            setGuide(guide_data.user);\r\n        }\r\n        return () => {};\r\n    }, [guide_loading]);\r\n\r\n    const {\r\n        usernotes,\r\n        openFiles,\r\n        currentOpenFile,\r\n        setcurrentOpenFile,\r\n        setuserNotes,\r\n        setopenFiles,\r\n        actions,\r\n    } = FileActions({ usernotes: [], openFiles: [], currentOpenFile: \"\" });\r\n\r\n    useEffect(() => {\r\n        if (!loading && !error) {\r\n            setuserNotes(data.usernotes);\r\n        }\r\n    }, [loading, data, error]);\r\n\r\n    return loading || ava_loading || guide_loading ? (\r\n        <div\r\n            backgroundColor=\"blue\"\r\n            style={{\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n            }}\r\n        >\r\n            <Loading type=\"spinningBubbles\" color=\"ffffff\" />\r\n        </div>\r\n    ) : (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <Container\r\n                maxWidth={false}\r\n                disableGutters={true}\r\n                className={classes.pageContainer}\r\n            >\r\n                <filecontext.Provider\r\n                    value={{\r\n                        usernotes,\r\n                        openFiles,\r\n                        currentOpenFile,\r\n                        setcurrentOpenFile,\r\n                        setuserNotes,\r\n                        setopenFiles,\r\n                        actions,\r\n                    }}\r\n                >\r\n                    <AvatarContext.Provider value={{ avatar, setAvatar }}>\r\n                        <Header />\r\n                    </AvatarContext.Provider>\r\n                    <mainContext.Provider\r\n                        value={{\r\n                            mode,\r\n                            setMode,\r\n                            open,\r\n                            setOpen,\r\n                            searchStr,\r\n                            setSearchStr,\r\n                            guide,\r\n                        }}\r\n                    >\r\n                        <main\r\n                            style={{\r\n                                display: \"flex\",\r\n                                flexGrow: 1,\r\n                                width: \"100vw\",\r\n                                alignItems: \"stretch\",\r\n                            }}\r\n                        >\r\n                            <PersistentDrawerLeft></PersistentDrawerLeft>\r\n                            <div\r\n                                style={{\r\n                                    display: \"flex\",\r\n                                    flex: \"1 1 0\",\r\n                                    minWidth: \"0px\",\r\n                                    overflowY: \"hidden\",\r\n                                }}\r\n                            >\r\n                                <div\r\n                                    style={{\r\n                                        display: \"flex\",\r\n                                        flexGrow: 1,\r\n                                        maxWidth: \"100%\",\r\n                                        minWidth: \"0px\",\r\n                                        flexDirection: \"column\",\r\n                                        alignItems: \"stretch\",\r\n                                    }}\r\n                                >\r\n                                    <Main></Main>\r\n                                    <TagBar></TagBar>\r\n                                </div>\r\n                            </div>\r\n                            <PersistentDrawerRight></PersistentDrawerRight>\r\n                        </main>\r\n                    </mainContext.Provider>\r\n                </filecontext.Provider>\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { Switch } from \"react-router-dom\";\r\nimport SignIn from \"../components/SignIn\";\r\nimport SignUp from \"../components/SignUp\";\r\nimport AuthRoute from \"./authRoute\";\r\nimport ProtectRoute from \"./protectRoute\";\r\nimport Page_1_0 from \"../components/Page_1_0/Page_1_0\";\r\nfunction Routes() {\r\n    return (\r\n        <Switch>\r\n            <AuthRoute exact path=\"/\" component={SignIn} />\r\n            <AuthRoute exact path=\"/login\" component={SignIn} />\r\n            <AuthRoute exact path=\"/signup\" component={SignUp} />\r\n            <ProtectRoute exact path=\"/dashboard\" component={Page_1_0} />\r\n        </Switch>\r\n    );\r\n}\r\n\r\nexport default Routes;\r\n","import \"./App.css\";\r\nimport Routes from \"./routes/Routes\";\r\n\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { setAccessToken } from \"./accessToken\";\r\nimport { AuthContext } from \"./routes/auth\";\r\nimport decode from \"jwt-decode\";\r\nimport Loading from \"./routes/loading\";\r\n\r\nfunction App() {\r\n    const [loading, setLoading] = useState(true);\r\n    const context = useContext(AuthContext);\r\n    useEffect(() => {\r\n        fetch(\"/refresh_token\", {\r\n            method: \"POST\",\r\n            credentials: \"include\",\r\n        }).then(async (res) => {\r\n            const data = await res.json();\r\n            if (data.accessToken) {\r\n                setAccessToken(data.accessToken);\r\n                const { userId, name, email } = decode(data.accessToken);\r\n                if (!context.user)\r\n                    context.login({\r\n                        userId,\r\n                        name,\r\n                        email,\r\n                        accessToken: data.accessToken,\r\n                    });\r\n            } else console.log(\"no access Token, Please login\");\r\n            setLoading(false);\r\n        });\r\n    }, []);\r\n    return (\r\n        <div className=\"App\">\r\n            <Router>\r\n                {loading ? (\r\n                    <div\r\n                        backgroundColor=\"blue\"\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: \"100%\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                            alignItems: \"center\",\r\n                        }}\r\n                    >\r\n                        <Loading type=\"spinningBubbles\" color=\"ffffff\" />\r\n                    </div>\r\n                ) : (\r\n                    <Routes />\r\n                )}\r\n            </Router>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nimport { ApolloClient, InMemoryCache } from \"apollo-boost\";\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\nimport { ApolloLink, Observable } from \"apollo-link\";\r\nimport { onError } from \"apollo-link-error\";\r\nimport { createUploadLink } from \"apollo-upload-client\";\r\nimport { TokenRefreshLink } from \"apollo-link-token-refresh\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport { AuthProvider } from \"./routes/auth\";\r\nimport { setAccessToken, getAccessToken } from \"./accessToken\";\r\n\r\n// Create an http link:\r\nconst httpLink = createUploadLink({\r\n    uri: \"/graphql\",\r\n    credentials: \"include\",\r\n});\r\n\r\nconst requestLink = new ApolloLink(\r\n    (operation, forward) =>\r\n        new Observable((observer) => {\r\n            let handle;\r\n            Promise.resolve(operation)\r\n                .then((operation) => {\r\n                    const accessToken = getAccessToken();\r\n                    if (accessToken) {\r\n                        operation.setContext({\r\n                            headers: {\r\n                                authorization: `bearer ${accessToken}`,\r\n                            },\r\n                        });\r\n                    }\r\n                })\r\n                .then(() => {\r\n                    handle = forward(operation).subscribe({\r\n                        next: observer.next.bind(observer),\r\n                        error: observer.error.bind(observer),\r\n                        complete: observer.complete.bind(observer),\r\n                    });\r\n                })\r\n                .catch(observer.error.bind(observer));\r\n\r\n            return () => {\r\n                if (handle) handle.unsubscribe();\r\n            };\r\n        })\r\n);\r\n\r\nconst RefreshLink = new TokenRefreshLink({\r\n    accessTokenField: \"accessToken\",\r\n    isTokenValidOrUndefined: () => {\r\n        const token = getAccessToken();\r\n        if (!token) {\r\n            return true;\r\n        }\r\n\r\n        try {\r\n            const { exp } = jwtDecode(token);\r\n            if (Date.now() >= exp * 1000) {\r\n                return false;\r\n            } else {\r\n                return true;\r\n            }\r\n        } catch {\r\n            return false;\r\n        }\r\n    },\r\n    fetchAccessToken: () => {\r\n        return fetch(\"/refresh_token\", {\r\n            method: \"POST\",\r\n            credentials: \"include\",\r\n        });\r\n    },\r\n    handleFetch: (accessToken) => {\r\n        setAccessToken(accessToken);\r\n    },\r\n    handleError: (err) => {\r\n        console.warn(\"Your refresh token is invalid. Try to relogin\");\r\n        console.error(err);\r\n    },\r\n});\r\n\r\nconst errorLink = onError(({ graphQLErrors, networkError, errorMessage }) => {\r\n    console.log(graphQLErrors);\r\n    console.log(networkError);\r\n});\r\n\r\nconst client = new ApolloClient({\r\n    link: ApolloLink.from([RefreshLink, errorLink, requestLink, httpLink]),\r\n    cache: new InMemoryCache().restore({}),\r\n});\r\n\r\nconst wrappedApp = (\r\n    <ApolloProvider client={client}>\r\n        <AuthProvider>\r\n            <App />\r\n        </AuthProvider>\r\n    </ApolloProvider>\r\n);\r\n\r\nReactDOM.render(wrappedApp, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}